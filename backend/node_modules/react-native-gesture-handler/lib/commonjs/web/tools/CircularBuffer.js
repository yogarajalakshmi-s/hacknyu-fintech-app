"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
class CircularBuffer {
  constructor(size) {
    _defineProperty(this, "capacity", void 0);
    _defineProperty(this, "buffer", void 0);
    _defineProperty(this, "index", void 0);
    _defineProperty(this, "_size", void 0);
    this.capacity = size;
    this.buffer = new Array(size);
    this.index = 0;
    this._size = 0;
  }
  push(element) {
    this.buffer[this.index] = element;
    this.index = (this.index + 1) % this.capacity;
    this._size = Math.min(this.size + 1, this.capacity);
  }
  get(at) {
    if (this._size === this.capacity) {
      let index = (this.index + at) % this.capacity;
      if (index < 0) {
        index += this.capacity;
      }
      return this.buffer[index];
    } else {
      return this.buffer[at];
    }
  }
  clear() {
    this.buffer = new Array(this.capacity);
    this.index = 0;
    this._size = 0;
  }
  get size() {
    return this._size;
  }
}
exports.default = CircularBuffer;
//# sourceMappingURL=CircularBuffer.js.map