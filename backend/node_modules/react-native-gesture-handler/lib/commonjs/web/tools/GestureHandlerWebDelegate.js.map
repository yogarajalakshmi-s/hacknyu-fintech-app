{"version":3,"names":["_findNodeHandle","_interopRequireDefault","require","_PointerEventManager","_State","_utils","_gestureHandlerCommon","_KeyboardEventManager","_WheelEventManager","e","__esModule","default","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","GestureHandlerWebDelegate","constructor","userSelect","touchAction","init","viewRef","handler","Error","handlerTag","isInitialized","gestureHandler","view","findNodeHandle","defaultViewStyles","style","config","setUserSelect","enabled","setTouchAction","setContextMenu","eventManagers","push","PointerEventManager","KeyboardEventManager","WheelEventManager","forEach","manager","attachEventManager","isPointerInBounds","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","state","State","ACTIVE","cursor","shouldDisableContextMenu","enableContextMenu","undefined","isButtonInConfig","MouseButton","RIGHT","addContextMenuListeners","addEventListener","disableContextMenu","removeContextMenuListeners","removeEventListener","preventDefault","stopPropagation","isHandlerEnabled","onEnabledChange","registerListeners","unregisterListeners","onBegin","onActivate","onEnd","onCancel","onFail","destroy","_view","exports"],"sources":["GestureHandlerWebDelegate.ts"],"sourcesContent":["import findNodeHandle from '../../findNodeHandle';\nimport type IGestureHandler from '../handlers/IGestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\nimport { Config } from '../interfaces';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport KeyboardEventManager from './KeyboardEventManager';\nimport WheelEventManager from './WheelEventManager';\n\ninterface DefaultViewStyles {\n  userSelect: string;\n  touchAction: string;\n}\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement, IGestureHandler>\n{\n  private isInitialized = false;\n  private _view!: HTMLElement;\n\n  private gestureHandler!: IGestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n  private defaultViewStyles: DefaultViewStyles = {\n    userSelect: '',\n    touchAction: '',\n  };\n\n  init(viewRef: number, handler: IGestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.handlerTag}`\n      );\n    }\n\n    this.isInitialized = true;\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.defaultViewStyles = {\n      userSelect: this.view.style.userSelect,\n      touchAction: this.view.style.touchAction,\n    };\n\n    const config = handler.config;\n\n    this.setUserSelect(config.enabled);\n    this.setTouchAction(config.enabled);\n    this.setContextMenu(config.enabled);\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new KeyboardEventManager(this.view));\n    this.eventManagers.push(new WheelEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.config;\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.state === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  private shouldDisableContextMenu(config: Config) {\n    return (\n      (config.enableContextMenu === undefined &&\n        this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)) ||\n      config.enableContextMenu === false\n    );\n  }\n\n  private addContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.addEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.addEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private removeContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.removeEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.removeEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private disableContextMenu(this: void, e: MouseEvent): void {\n    e.preventDefault();\n  }\n\n  private enableContextMenu(this: void, e: MouseEvent): void {\n    e.stopPropagation();\n  }\n\n  private setUserSelect(isHandlerEnabled: boolean) {\n    const { userSelect } = this.gestureHandler.config;\n\n    this.view.style['userSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n\n    this.view.style['webkitUserSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n  }\n\n  private setTouchAction(isHandlerEnabled: boolean) {\n    const { touchAction } = this.gestureHandler.config;\n\n    this.view.style['touchAction'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n\n    // @ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n  }\n\n  private setContextMenu(isHandlerEnabled: boolean) {\n    const config = this.gestureHandler.config;\n\n    if (isHandlerEnabled) {\n      this.addContextMenuListeners(config);\n    } else {\n      this.removeContextMenuListeners(config);\n    }\n  }\n\n  onEnabledChange(enabled: boolean): void {\n    if (!this.isInitialized) {\n      return;\n    }\n\n    this.setUserSelect(enabled);\n    this.setTouchAction(enabled);\n    this.setContextMenu(enabled);\n\n    if (enabled) {\n      this.eventManagers.forEach((manager) => {\n        // It may look like managers will be registered twice when handler is mounted for the first time.\n        // However, `init` method is called AFTER `updateGestureConfig` - it means that delegate has not\n        // been initialized yet, so this code won't be executed.\n        //\n        // Also, because we use defined functions, not lambdas, they will not be registered multiple times.\n        manager.registerListeners();\n      });\n    } else {\n      this.eventManagers.forEach((manager) => {\n        manager.unregisterListeners();\n      });\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.config;\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n\n  public destroy(config: Config): void {\n    this.removeContextMenuListeners(config);\n\n    this.eventManagers.forEach((manager) => {\n      manager.unregisterListeners();\n    });\n  }\n\n  public get view() {\n    return this._view;\n  }\n  public set view(value: HTMLElement) {\n    this._view = value;\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,eAAA,GAAAC,sBAAA,CAAAC,OAAA;AAMA,IAAAC,oBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAGA,IAAAI,qBAAA,GAAAJ,OAAA;AACA,IAAAK,qBAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,kBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAoD,SAAAD,uBAAAQ,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,gBAAAH,CAAA,EAAAI,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAE,cAAA,CAAAF,CAAA,MAAAJ,CAAA,GAAAO,MAAA,CAAAC,cAAA,CAAAR,CAAA,EAAAI,CAAA,IAAAK,KAAA,EAAAJ,CAAA,EAAAK,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAZ,CAAA,CAAAI,CAAA,IAAAC,CAAA,EAAAL,CAAA;AAAA,SAAAM,eAAAD,CAAA,QAAAQ,CAAA,GAAAC,YAAA,CAAAT,CAAA,uCAAAQ,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAT,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAL,CAAA,GAAAK,CAAA,CAAAU,MAAA,CAAAC,WAAA,kBAAAhB,CAAA,QAAAa,CAAA,GAAAb,CAAA,CAAAiB,IAAA,CAAAZ,CAAA,EAAAD,CAAA,uCAAAS,CAAA,SAAAA,CAAA,YAAAK,SAAA,yEAAAd,CAAA,GAAAe,MAAA,GAAAC,MAAA,EAAAf,CAAA;AAO7C,MAAMgB,yBAAyB,CAEtC;EAAAC,YAAA;IAAAnB,eAAA,wBAC0B,KAAK;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,wBAIoB,EAAE;IAAAA,eAAA,4BACJ;MAC7CoB,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IACf,CAAC;EAAA;EAEDC,IAAIA,CAACC,OAAe,EAAEC,OAAwB,EAAQ;IACpD,IAAI,CAACD,OAAO,EAAE;MACZ,MAAM,IAAIE,KAAK,CACb,wCAAwCD,OAAO,CAACE,UAAU,EAC5D,CAAC;IACH;IAEA,IAAI,CAACC,aAAa,GAAG,IAAI;IAEzB,IAAI,CAACC,cAAc,GAAGJ,OAAO;IAC7B,IAAI,CAACK,IAAI,GAAG,IAAAC,uBAAc,EAACP,OAAO,CAA2B;IAE7D,IAAI,CAACQ,iBAAiB,GAAG;MACvBX,UAAU,EAAE,IAAI,CAACS,IAAI,CAACG,KAAK,CAACZ,UAAU;MACtCC,WAAW,EAAE,IAAI,CAACQ,IAAI,CAACG,KAAK,CAACX;IAC/B,CAAC;IAED,MAAMY,MAAM,GAAGT,OAAO,CAACS,MAAM;IAE7B,IAAI,CAACC,aAAa,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,IAAI,CAACC,cAAc,CAACH,MAAM,CAACE,OAAO,CAAC;IACnC,IAAI,CAACE,cAAc,CAACJ,MAAM,CAACE,OAAO,CAAC;IAEnC,IAAI,CAACG,aAAa,CAACC,IAAI,CAAC,IAAIC,4BAAmB,CAAC,IAAI,CAACX,IAAI,CAAC,CAAC;IAC3D,IAAI,CAACS,aAAa,CAACC,IAAI,CAAC,IAAIE,6BAAoB,CAAC,IAAI,CAACZ,IAAI,CAAC,CAAC;IAC5D,IAAI,CAACS,aAAa,CAACC,IAAI,CAAC,IAAIG,0BAAiB,CAAC,IAAI,CAACb,IAAI,CAAC,CAAC;IAEzD,IAAI,CAACS,aAAa,CAACK,OAAO,CAAEC,OAAO,IACjC,IAAI,CAAChB,cAAc,CAACiB,kBAAkB,CAACD,OAAO,CAChD,CAAC;EACH;EAEAE,iBAAiBA,CAAC;IAAEC,CAAC;IAAEC;EAA4B,CAAC,EAAW;IAC7D,OAAO,IAAAF,wBAAiB,EAAC,IAAI,CAACjB,IAAI,EAAE;MAAEkB,CAAC;MAAEC;IAAE,CAAC,CAAC;EAC/C;EAEAC,WAAWA,CAAA,EAAkB;IAC3B,MAAMC,IAAI,GAAG,IAAI,CAACrB,IAAI,CAACsB,qBAAqB,CAAC,CAAC;IAE9C,OAAO;MACLC,KAAK,EAAEF,IAAI,CAACG,IAAI;MAChBC,KAAK,EAAEJ,IAAI,CAACK,GAAG;MACfC,KAAK,EAAEN,IAAI,CAACM,KAAK;MACjBC,MAAM,EAAEP,IAAI,CAACO;IACf,CAAC;EACH;EAEAC,KAAKA,CAAA,EAAS;IACZ,IAAI,CAACpB,aAAa,CAACK,OAAO,CAAEC,OAA8B,IACxDA,OAAO,CAACe,YAAY,CAAC,CACvB,CAAC;EACH;EAEAC,cAAcA,CAAA,EAAG;IACf,MAAM3B,MAAM,GAAG,IAAI,CAACL,cAAc,CAACK,MAAM;IAEzC,IACEA,MAAM,CAAC4B,YAAY,IACnB5B,MAAM,CAAC4B,YAAY,KAAK,MAAM,IAC9B,IAAI,CAACjC,cAAc,CAACkC,KAAK,KAAKC,YAAK,CAACC,MAAM,EAC1C;MACA,IAAI,CAACnC,IAAI,CAACG,KAAK,CAACiC,MAAM,GAAG,MAAM;IACjC;EACF;EAEQC,wBAAwBA,CAACjC,MAAc,EAAE;IAC/C,OACGA,MAAM,CAACkC,iBAAiB,KAAKC,SAAS,IACrC,IAAI,CAACxC,cAAc,CAACyC,gBAAgB,CAACC,iCAAW,CAACC,KAAK,CAAC,IACzDtC,MAAM,CAACkC,iBAAiB,KAAK,KAAK;EAEtC;EAEQK,uBAAuBA,CAACvC,MAAc,EAAQ;IACpD,IAAI,IAAI,CAACiC,wBAAwB,CAACjC,MAAM,CAAC,EAAE;MACzC,IAAI,CAACJ,IAAI,CAAC4C,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAACC,kBAAkB,CAAC;IACpE,CAAC,MAAM,IAAIzC,MAAM,CAACkC,iBAAiB,EAAE;MACnC,IAAI,CAACtC,IAAI,CAAC4C,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAACN,iBAAiB,CAAC;IACnE;EACF;EAEQQ,0BAA0BA,CAAC1C,MAAc,EAAQ;IACvD,IAAI,IAAI,CAACiC,wBAAwB,CAACjC,MAAM,CAAC,EAAE;MACzC,IAAI,CAACJ,IAAI,CAAC+C,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAACF,kBAAkB,CAAC;IACvE,CAAC,MAAM,IAAIzC,MAAM,CAACkC,iBAAiB,EAAE;MACnC,IAAI,CAACtC,IAAI,CAAC+C,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAACT,iBAAiB,CAAC;IACtE;EACF;EAEQO,kBAAkBA,CAAa7E,CAAa,EAAQ;IAC1DA,CAAC,CAACgF,cAAc,CAAC,CAAC;EACpB;EAEQV,iBAAiBA,CAAatE,CAAa,EAAQ;IACzDA,CAAC,CAACiF,eAAe,CAAC,CAAC;EACrB;EAEQ5C,aAAaA,CAAC6C,gBAAyB,EAAE;IAC/C,MAAM;MAAE3D;IAAW,CAAC,GAAG,IAAI,CAACQ,cAAc,CAACK,MAAM;IAEjD,IAAI,CAACJ,IAAI,CAACG,KAAK,CAAC,YAAY,CAAC,GAAG+C,gBAAgB,GAC3C3D,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,MAAM,GACrB,IAAI,CAACW,iBAAiB,CAACX,UAAU;IAErC,IAAI,CAACS,IAAI,CAACG,KAAK,CAAC,kBAAkB,CAAC,GAAG+C,gBAAgB,GACjD3D,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,MAAM,GACrB,IAAI,CAACW,iBAAiB,CAACX,UAAU;EACvC;EAEQgB,cAAcA,CAAC2C,gBAAyB,EAAE;IAChD,MAAM;MAAE1D;IAAY,CAAC,GAAG,IAAI,CAACO,cAAc,CAACK,MAAM;IAElD,IAAI,CAACJ,IAAI,CAACG,KAAK,CAAC,aAAa,CAAC,GAAG+C,gBAAgB,GAC5C1D,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,MAAM,GACtB,IAAI,CAACU,iBAAiB,CAACV,WAAW;;IAEtC;IACA,IAAI,CAACQ,IAAI,CAACG,KAAK,CAAC,oBAAoB,CAAC,GAAG+C,gBAAgB,GACnD1D,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,MAAM,GACtB,IAAI,CAACU,iBAAiB,CAACV,WAAW;EACxC;EAEQgB,cAAcA,CAAC0C,gBAAyB,EAAE;IAChD,MAAM9C,MAAM,GAAG,IAAI,CAACL,cAAc,CAACK,MAAM;IAEzC,IAAI8C,gBAAgB,EAAE;MACpB,IAAI,CAACP,uBAAuB,CAACvC,MAAM,CAAC;IACtC,CAAC,MAAM;MACL,IAAI,CAAC0C,0BAA0B,CAAC1C,MAAM,CAAC;IACzC;EACF;EAEA+C,eAAeA,CAAC7C,OAAgB,EAAQ;IACtC,IAAI,CAAC,IAAI,CAACR,aAAa,EAAE;MACvB;IACF;IAEA,IAAI,CAACO,aAAa,CAACC,OAAO,CAAC;IAC3B,IAAI,CAACC,cAAc,CAACD,OAAO,CAAC;IAC5B,IAAI,CAACE,cAAc,CAACF,OAAO,CAAC;IAE5B,IAAIA,OAAO,EAAE;MACX,IAAI,CAACG,aAAa,CAACK,OAAO,CAAEC,OAAO,IAAK;QACtC;QACA;QACA;QACA;QACA;QACAA,OAAO,CAACqC,iBAAiB,CAAC,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAAC3C,aAAa,CAACK,OAAO,CAAEC,OAAO,IAAK;QACtCA,OAAO,CAACsC,mBAAmB,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF;EAEAC,OAAOA,CAAA,EAAS;IACd;EAAA;EAGFC,UAAUA,CAAA,EAAS;IACjB,MAAMnD,MAAM,GAAG,IAAI,CAACL,cAAc,CAACK,MAAM;IAEzC,IACE,CAAC,CAAC,IAAI,CAACJ,IAAI,CAACG,KAAK,CAACiC,MAAM,IAAI,IAAI,CAACpC,IAAI,CAACG,KAAK,CAACiC,MAAM,KAAK,MAAM,KAC7DhC,MAAM,CAAC4B,YAAY,EACnB;MACA,IAAI,CAAChC,IAAI,CAACG,KAAK,CAACiC,MAAM,GAAGhC,MAAM,CAAC4B,YAAY;IAC9C;EACF;EAEAwB,KAAKA,CAAA,EAAS;IACZ,IAAI,CAACzB,cAAc,CAAC,CAAC;EACvB;EAEA0B,QAAQA,CAAA,EAAS;IACf,IAAI,CAAC1B,cAAc,CAAC,CAAC;EACvB;EAEA2B,MAAMA,CAAA,EAAS;IACb,IAAI,CAAC3B,cAAc,CAAC,CAAC;EACvB;EAEO4B,OAAOA,CAACvD,MAAc,EAAQ;IACnC,IAAI,CAAC0C,0BAA0B,CAAC1C,MAAM,CAAC;IAEvC,IAAI,CAACK,aAAa,CAACK,OAAO,CAAEC,OAAO,IAAK;MACtCA,OAAO,CAACsC,mBAAmB,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEA,IAAWrD,IAAIA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC4D,KAAK;EACnB;EACA,IAAW5D,IAAIA,CAACvB,KAAkB,EAAE;IAClC,IAAI,CAACmF,KAAK,GAAGnF,KAAK;EACpB;AACF;AAACoF,OAAA,CAAAxE,yBAAA,GAAAA,yBAAA","ignoreList":[]}