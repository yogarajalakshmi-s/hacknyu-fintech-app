{"version":3,"names":["_interfaces","require","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","RotationGestureDetector","constructor","callbacks","NaN","onRotationBegin","onRotation","onRotationEnd","updateCurrent","event","tracker","previousTime","currentTime","time","firstPointerID","secondPointerID","keyPointers","firstPointerCoords","getLastAbsoluteCoords","secondPointerCoords","vectorX","x","vectorY","y","_anchorX","_anchorY","angle","Math","atan2","_rotation","isNaN","previousAngle","rotation","PI","finish","isInProgress","setKeyPointers","pointerIDs","trackedPointers","keys","next","onTouchEvent","eventType","EventTypes","DOWN","ADDITIONAL_POINTER_DOWN","MOVE","ADDITIONAL_POINTER_UP","indexOf","pointerId","UP","reset","anchorX","anchorY","timeDelta","exports","default"],"sources":["RotationGestureDetector.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes } from '../interfaces';\nimport PointerTracker from '../tools/PointerTracker';\n\nexport interface RotationGestureListener {\n  onRotationBegin: (detector: RotationGestureDetector) => boolean;\n  onRotation: (detector: RotationGestureDetector) => boolean;\n  onRotationEnd: (detector: RotationGestureDetector) => void;\n}\n\nexport default class RotationGestureDetector\n  implements RotationGestureListener\n{\n  onRotationBegin: (detector: RotationGestureDetector) => boolean;\n  onRotation: (detector: RotationGestureDetector) => boolean;\n  onRotationEnd: (detector: RotationGestureDetector) => void;\n\n  private currentTime = 0;\n  private previousTime = 0;\n\n  private previousAngle = 0;\n  private _rotation = 0;\n\n  private _anchorX = 0;\n  private _anchorY = 0;\n\n  private isInProgress = false;\n\n  private keyPointers: number[] = [NaN, NaN];\n\n  constructor(callbacks: RotationGestureListener) {\n    this.onRotationBegin = callbacks.onRotationBegin;\n    this.onRotation = callbacks.onRotation;\n    this.onRotationEnd = callbacks.onRotationEnd;\n  }\n\n  private updateCurrent(event: AdaptedEvent, tracker: PointerTracker): void {\n    this.previousTime = this.currentTime;\n    this.currentTime = event.time;\n\n    const [firstPointerID, secondPointerID] = this.keyPointers;\n\n    const firstPointerCoords = tracker.getLastAbsoluteCoords(firstPointerID);\n    const secondPointerCoords = tracker.getLastAbsoluteCoords(secondPointerID);\n\n    const vectorX: number = secondPointerCoords.x - firstPointerCoords.x;\n    const vectorY: number = secondPointerCoords.y - firstPointerCoords.y;\n\n    this._anchorX = (firstPointerCoords.x + secondPointerCoords.x) / 2;\n    this._anchorY = (firstPointerCoords.y + secondPointerCoords.y) / 2;\n\n    // Angle diff should be positive when rotating in clockwise direction\n    const angle: number = -Math.atan2(vectorY, vectorX);\n\n    this._rotation = Number.isNaN(this.previousAngle)\n      ? 0\n      : this.previousAngle - angle;\n\n    this.previousAngle = angle;\n\n    if (this.rotation > Math.PI) {\n      this._rotation -= Math.PI;\n    } else if (this.rotation < -Math.PI) {\n      this._rotation += Math.PI;\n    }\n\n    if (this.rotation > Math.PI / 2) {\n      this._rotation -= Math.PI;\n    } else if (this.rotation < -Math.PI / 2) {\n      this._rotation += Math.PI;\n    }\n  }\n\n  private finish(): void {\n    if (!this.isInProgress) {\n      return;\n    }\n\n    this.isInProgress = false;\n    this.keyPointers = [NaN, NaN];\n    this.onRotationEnd(this);\n  }\n\n  private setKeyPointers(tracker: PointerTracker): void {\n    if (this.keyPointers[0] && this.keyPointers[1]) {\n      return;\n    }\n\n    const pointerIDs: IterableIterator<number> = tracker.trackedPointers.keys();\n\n    this.keyPointers[0] = pointerIDs.next().value as number;\n    this.keyPointers[1] = pointerIDs.next().value as number;\n  }\n\n  public onTouchEvent(event: AdaptedEvent, tracker: PointerTracker): boolean {\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n        this.isInProgress = false;\n        break;\n\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        if (this.isInProgress) {\n          break;\n        }\n        this.isInProgress = true;\n\n        this.previousTime = event.time;\n        this.previousAngle = NaN;\n\n        this.setKeyPointers(tracker);\n\n        this.updateCurrent(event, tracker);\n        this.onRotationBegin(this);\n        break;\n\n      case EventTypes.MOVE:\n        if (!this.isInProgress) {\n          break;\n        }\n\n        this.updateCurrent(event, tracker);\n        this.onRotation(this);\n\n        break;\n\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        if (!this.isInProgress) {\n          break;\n        }\n\n        if (this.keyPointers.indexOf(event.pointerId) >= 0) {\n          this.finish();\n        }\n\n        break;\n\n      case EventTypes.UP:\n        if (this.isInProgress) {\n          this.finish();\n        }\n        break;\n    }\n\n    return true;\n  }\n\n  public reset(): void {\n    this.keyPointers = [NaN, NaN];\n    this.isInProgress = false;\n  }\n\n  public get anchorX() {\n    return this._anchorX;\n  }\n\n  public get anchorY() {\n    return this._anchorY;\n  }\n\n  public get rotation() {\n    return this._rotation;\n  }\n\n  public get timeDelta() {\n    return this.currentTime + this.previousTime;\n  }\n}\n"],"mappings":"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","ignoreList":[]}