{"version":3,"names":["_State","require","_interfaces","_GestureHandler","_interopRequireDefault","e","__esModule","default","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","GestureHandler","constructor","args","MIN_SAFE_INTEGER","updateGestureConfig","enabled","props","config","numberOfTaps","undefined","maxDurationMs","maxDelayMs","maxDeltaX","maxDeltaY","maxDist","maxDistSq","minPointers","minNumberOfPointers","resetConfig","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","setTimeout","fail","endTap","tapsSoFar","currentMaxNumberOfPointers","activate","onPointerDown","event","isButtonInConfig","button","tracker","addToTracker","trySettingPosition","startX","x","startY","y","lastX","lastY","updateState","tryToSendTouchEvent","onPointerAdd","offsetX","offsetY","lastCoords","getAbsoluteCoordsAverage","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","trackedPointersCount","shouldFail","state","State","UNDETERMINED","eventType","EventTypes","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","distSq","end","onCancel","resetProgress","exports"],"sources":["TapGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  // Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.lastX = lastCoords.x;\n    this.lastY = lastCoords.y;\n\n    this.startX = lastCoords.x;\n    this.startY = lastCoords.y;\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.lastX = lastCoords.x;\n    this.lastY = lastCoords.y;\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.lastX = lastCoords.x;\n    this.lastY = lastCoords.y;\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.lastX = lastCoords.x;\n    this.lastY = lastCoords.y;\n\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.lastX = lastCoords.x;\n    this.lastY = lastCoords.y;\n\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (this.currentMaxNumberOfPointers < this.tracker.trackedPointersCount) {\n      this.currentMaxNumberOfPointers = this.tracker.trackedPointersCount;\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.state) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAEA,IAAAE,eAAA,GAAAC,sBAAA,CAAAH,OAAA;AAA8C,SAAAG,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,gBAAAH,CAAA,EAAAI,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAE,cAAA,CAAAF,CAAA,MAAAJ,CAAA,GAAAO,MAAA,CAAAC,cAAA,CAAAR,CAAA,EAAAI,CAAA,IAAAK,KAAA,EAAAJ,CAAA,EAAAK,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAZ,CAAA,CAAAI,CAAA,IAAAC,CAAA,EAAAL,CAAA;AAAA,SAAAM,eAAAD,CAAA,QAAAQ,CAAA,GAAAC,YAAA,CAAAT,CAAA,uCAAAQ,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAT,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAL,CAAA,GAAAK,CAAA,CAAAU,MAAA,CAAAC,WAAA,kBAAAhB,CAAA,QAAAa,CAAA,GAAAb,CAAA,CAAAiB,IAAA,CAAAZ,CAAA,EAAAD,CAAA,uCAAAS,CAAA,SAAAA,CAAA,YAAAK,SAAA,yEAAAd,CAAA,GAAAe,MAAA,GAAAC,MAAA,EAAAf,CAAA;AAE9C,MAAMgB,uBAAuB,GAAG,GAAG;AACnC,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,sBAAsB,GAAG,CAAC;AAChC,MAAMC,8BAA8B,GAAG,CAAC;AAEzB,MAAMC,iBAAiB,SAASC,uBAAc,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAzB,eAAA,oBACxCiB,MAAM,CAACS,gBAAgB;IAAA1B,eAAA,oBACvBiB,MAAM,CAACS,gBAAgB;IAAA1B,eAAA,oBACvBiB,MAAM,CAACS,gBAAgB;IAAA1B,eAAA,wBACnBkB,uBAAuB;IAAAlB,eAAA,qBAC1BmB,oBAAoB;IAAAnB,eAAA,uBAElBoB,sBAAsB;IAAApB,eAAA,8BACfqB,8BAA8B;IAAArB,eAAA,qCACvB,CAAC;IAAAA,eAAA,iBAErB,CAAC;IAAAA,eAAA,iBACD,CAAC;IAAAA,eAAA,kBACA,CAAC;IAAAA,eAAA,kBACD,CAAC;IAAAA,eAAA,gBACH,CAAC;IAAAA,eAAA,gBACD,CAAC;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,oBAKG,CAAC;EAAA;EAEd2B,mBAAmBA,CAAC;IAAEC,OAAO,GAAG,IAAI;IAAE,GAAGC;EAAc,CAAC,EAAQ;IACrE,KAAK,CAACF,mBAAmB,CAAC;MAAEC,OAAO,EAAEA,OAAO;MAAE,GAAGC;IAAM,CAAC,CAAC;IAEzD,IAAI,IAAI,CAACC,MAAM,CAACC,YAAY,KAAKC,SAAS,EAAE;MAC1C,IAAI,CAACD,YAAY,GAAG,IAAI,CAACD,MAAM,CAACC,YAAY;IAC9C;IAEA,IAAI,IAAI,CAACD,MAAM,CAACG,aAAa,KAAKD,SAAS,EAAE;MAC3C,IAAI,CAACC,aAAa,GAAG,IAAI,CAACH,MAAM,CAACG,aAAa;IAChD;IAEA,IAAI,IAAI,CAACH,MAAM,CAACI,UAAU,KAAKF,SAAS,EAAE;MACxC,IAAI,CAACE,UAAU,GAAG,IAAI,CAACJ,MAAM,CAACI,UAAU;IAC1C;IAEA,IAAI,IAAI,CAACJ,MAAM,CAACK,SAAS,KAAKH,SAAS,EAAE;MACvC,IAAI,CAACG,SAAS,GAAG,IAAI,CAACL,MAAM,CAACK,SAAS;IACxC;IAEA,IAAI,IAAI,CAACL,MAAM,CAACM,SAAS,KAAKJ,SAAS,EAAE;MACvC,IAAI,CAACI,SAAS,GAAG,IAAI,CAACN,MAAM,CAACM,SAAS;IACxC;IAEA,IAAI,IAAI,CAACN,MAAM,CAACO,OAAO,KAAKL,SAAS,EAAE;MACrC,IAAI,CAACM,SAAS,GAAG,IAAI,CAACR,MAAM,CAACO,OAAO,GAAG,IAAI,CAACP,MAAM,CAACO,OAAO;IAC5D;IAEA,IAAI,IAAI,CAACP,MAAM,CAACS,WAAW,KAAKP,SAAS,EAAE;MACzC,IAAI,CAACQ,mBAAmB,GAAG,IAAI,CAACV,MAAM,CAACS,WAAW;IACpD;EACF;EAEUE,WAAWA,CAAA,EAAS;IAC5B,KAAK,CAACA,WAAW,CAAC,CAAC;IAEnB,IAAI,CAACN,SAAS,GAAGlB,MAAM,CAACS,gBAAgB;IACxC,IAAI,CAACU,SAAS,GAAGnB,MAAM,CAACS,gBAAgB;IACxC,IAAI,CAACY,SAAS,GAAGrB,MAAM,CAACS,gBAAgB;IACxC,IAAI,CAACO,aAAa,GAAGf,uBAAuB;IAC5C,IAAI,CAACgB,UAAU,GAAGf,oBAAoB;IACtC,IAAI,CAACY,YAAY,GAAGX,sBAAsB;IAC1C,IAAI,CAACoB,mBAAmB,GAAGnB,8BAA8B;EAC3D;EAEQqB,aAAaA,CAAA,EAAS;IAC5BC,YAAY,CAAC,IAAI,CAACC,WAAW,CAAC;IAC9BD,YAAY,CAAC,IAAI,CAACE,YAAY,CAAC;EACjC;EAEQC,QAAQA,CAAA,EAAS;IACvB,IAAI,CAACJ,aAAa,CAAC,CAAC;IAEpB,IAAI,CAACE,WAAW,GAAGG,UAAU,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAACf,aAAa,CAAC;EACtE;EAEQgB,MAAMA,CAAA,EAAS;IACrB,IAAI,CAACP,aAAa,CAAC,CAAC;IAEpB,IACE,EAAE,IAAI,CAACQ,SAAS,KAAK,IAAI,CAACnB,YAAY,IACtC,IAAI,CAACoB,0BAA0B,IAAI,IAAI,CAACX,mBAAmB,EAC3D;MACA,IAAI,CAACY,QAAQ,CAAC,CAAC;IACjB,CAAC,MAAM;MACL,IAAI,CAACP,YAAY,GAAGE,UAAU,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAACd,UAAU,CAAC;IACpE;EACF;;EAEA;EACUmB,aAAaA,CAACC,KAAmB,EAAQ;IACjD,IAAI,CAAC,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;MACxC;IACF;IAEA,IAAI,CAACC,OAAO,CAACC,YAAY,CAACJ,KAAK,CAAC;IAChC,KAAK,CAACD,aAAa,CAACC,KAAK,CAAC;IAE1B,IAAI,CAACK,kBAAkB,CAACL,KAAK,CAAC;IAE9B,IAAI,CAACM,MAAM,GAAGN,KAAK,CAACO,CAAC;IACrB,IAAI,CAACC,MAAM,GAAGR,KAAK,CAACS,CAAC;IAErB,IAAI,CAACC,KAAK,GAAGV,KAAK,CAACO,CAAC;IACpB,IAAI,CAACI,KAAK,GAAGX,KAAK,CAACS,CAAC;IAEpB,IAAI,CAACG,WAAW,CAACZ,KAAK,CAAC;IAEvB,IAAI,CAACa,mBAAmB,CAACb,KAAK,CAAC;EACjC;EAEUc,YAAYA,CAACd,KAAmB,EAAQ;IAChD,KAAK,CAACc,YAAY,CAACd,KAAK,CAAC;IACzB,IAAI,CAACG,OAAO,CAACC,YAAY,CAACJ,KAAK,CAAC;IAChC,IAAI,CAACK,kBAAkB,CAACL,KAAK,CAAC;IAE9B,IAAI,CAACe,OAAO,IAAI,IAAI,CAACL,KAAK,GAAG,IAAI,CAACJ,MAAM;IACxC,IAAI,CAACU,OAAO,IAAI,IAAI,CAACL,KAAK,GAAG,IAAI,CAACH,MAAM;IAExC,MAAMS,UAAU,GAAG,IAAI,CAACd,OAAO,CAACe,wBAAwB,CAAC,CAAC;IAC1D,IAAI,CAACR,KAAK,GAAGO,UAAU,CAACV,CAAC;IACzB,IAAI,CAACI,KAAK,GAAGM,UAAU,CAACR,CAAC;IAEzB,IAAI,CAACH,MAAM,GAAGW,UAAU,CAACV,CAAC;IAC1B,IAAI,CAACC,MAAM,GAAGS,UAAU,CAACR,CAAC;IAE1B,IAAI,CAACG,WAAW,CAACZ,KAAK,CAAC;EACzB;EAEUmB,WAAWA,CAACnB,KAAmB,EAAQ;IAC/C,KAAK,CAACmB,WAAW,CAACnB,KAAK,CAAC;IAExB,MAAMiB,UAAU,GAAG,IAAI,CAACd,OAAO,CAACe,wBAAwB,CAAC,CAAC;IAC1D,IAAI,CAACR,KAAK,GAAGO,UAAU,CAACV,CAAC;IACzB,IAAI,CAACI,KAAK,GAAGM,UAAU,CAACR,CAAC;IAEzB,IAAI,CAACN,OAAO,CAACiB,iBAAiB,CAACpB,KAAK,CAACqB,SAAS,CAAC;IAE/C,IAAI,CAACT,WAAW,CAACZ,KAAK,CAAC;EACzB;EAEUsB,eAAeA,CAACtB,KAAmB,EAAQ;IACnD,KAAK,CAACsB,eAAe,CAACtB,KAAK,CAAC;IAC5B,IAAI,CAACG,OAAO,CAACiB,iBAAiB,CAACpB,KAAK,CAACqB,SAAS,CAAC;IAE/C,IAAI,CAACN,OAAO,IAAI,IAAI,CAACL,KAAK,GAAG,IAAI,CAACJ,MAAM;IACxC,IAAI,CAACU,OAAO,IAAI,IAAI,CAACL,KAAK,GAAG,IAAI,CAACH,MAAM;IAExC,MAAMS,UAAU,GAAG,IAAI,CAACd,OAAO,CAACe,wBAAwB,CAAC,CAAC;IAC1D,IAAI,CAACR,KAAK,GAAGO,UAAU,CAACV,CAAC;IACzB,IAAI,CAACI,KAAK,GAAGM,UAAU,CAACR,CAAC;IAEzB,IAAI,CAACH,MAAM,GAAG,IAAI,CAACI,KAAK;IACxB,IAAI,CAACF,MAAM,GAAG,IAAI,CAACG,KAAK;IAExB,IAAI,CAACC,WAAW,CAACZ,KAAK,CAAC;EACzB;EAEUuB,aAAaA,CAACvB,KAAmB,EAAQ;IACjD,IAAI,CAACK,kBAAkB,CAACL,KAAK,CAAC;IAC9B,IAAI,CAACG,OAAO,CAACqB,KAAK,CAACxB,KAAK,CAAC;IAEzB,MAAMiB,UAAU,GAAG,IAAI,CAACd,OAAO,CAACe,wBAAwB,CAAC,CAAC;IAC1D,IAAI,CAACR,KAAK,GAAGO,UAAU,CAACV,CAAC;IACzB,IAAI,CAACI,KAAK,GAAGM,UAAU,CAACR,CAAC;IAEzB,IAAI,CAACG,WAAW,CAACZ,KAAK,CAAC;IAEvB,KAAK,CAACuB,aAAa,CAACvB,KAAK,CAAC;EAC5B;EAEUyB,oBAAoBA,CAACzB,KAAmB,EAAQ;IACxD,IAAI,CAACK,kBAAkB,CAACL,KAAK,CAAC;IAC9B,IAAI,CAACG,OAAO,CAACqB,KAAK,CAACxB,KAAK,CAAC;IAEzB,MAAMiB,UAAU,GAAG,IAAI,CAACd,OAAO,CAACe,wBAAwB,CAAC,CAAC;IAC1D,IAAI,CAACR,KAAK,GAAGO,UAAU,CAACV,CAAC;IACzB,IAAI,CAACI,KAAK,GAAGM,UAAU,CAACR,CAAC;IAEzB,IAAI,CAACG,WAAW,CAACZ,KAAK,CAAC;IAEvB,KAAK,CAACyB,oBAAoB,CAACzB,KAAK,CAAC;EACnC;EAEQY,WAAWA,CAACZ,KAAmB,EAAQ;IAC7C,IAAI,IAAI,CAACH,0BAA0B,GAAG,IAAI,CAACM,OAAO,CAACuB,oBAAoB,EAAE;MACvE,IAAI,CAAC7B,0BAA0B,GAAG,IAAI,CAACM,OAAO,CAACuB,oBAAoB;IACrE;IAEA,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE;MACrB,IAAI,CAACjC,IAAI,CAAC,CAAC;MACX;IACF;IAEA,QAAQ,IAAI,CAACkC,KAAK;MAChB,KAAKC,YAAK,CAACC,YAAY;QACrB,IAAI9B,KAAK,CAAC+B,SAAS,KAAKC,sBAAU,CAACC,IAAI,EAAE;UACvC,IAAI,CAACC,KAAK,CAAC,CAAC;QACd;QACA,IAAI,CAAC1C,QAAQ,CAAC,CAAC;QACf;MACF,KAAKqC,YAAK,CAACM,KAAK;QACd,IAAInC,KAAK,CAAC+B,SAAS,KAAKC,sBAAU,CAACI,EAAE,EAAE;UACrC,IAAI,CAACzC,MAAM,CAAC,CAAC;QACf;QACA,IAAIK,KAAK,CAAC+B,SAAS,KAAKC,sBAAU,CAACC,IAAI,EAAE;UACvC,IAAI,CAACzC,QAAQ,CAAC,CAAC;QACjB;QACA;MACF;QACE;IACJ;EACF;EAEQa,kBAAkBA,CAACL,KAAmB,EAAQ;IACpD,IAAI,IAAI,CAAC4B,KAAK,KAAKC,YAAK,CAACC,YAAY,EAAE;MACrC;IACF;IAEA,IAAI,CAACf,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACV,MAAM,GAAGN,KAAK,CAACO,CAAC;IACrB,IAAI,CAACC,MAAM,GAAGR,KAAK,CAACS,CAAC;EACvB;EAEQkB,UAAUA,CAAA,EAAY;IAC5B,MAAMU,EAAE,GAAG,IAAI,CAAC3B,KAAK,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACS,OAAO;IAElD,IACE,IAAI,CAAClC,SAAS,KAAKlB,MAAM,CAACS,gBAAgB,IAC1CkE,IAAI,CAACC,GAAG,CAACF,EAAE,CAAC,GAAG,IAAI,CAACxD,SAAS,EAC7B;MACA,OAAO,IAAI;IACb;IAEA,MAAM2D,EAAE,GAAG,IAAI,CAAC7B,KAAK,GAAG,IAAI,CAACH,MAAM,GAAG,IAAI,CAACQ,OAAO;IAClD,IACE,IAAI,CAAClC,SAAS,KAAKnB,MAAM,CAACS,gBAAgB,IAC1CkE,IAAI,CAACC,GAAG,CAACC,EAAE,CAAC,GAAG,IAAI,CAAC1D,SAAS,EAC7B;MACA,OAAO,IAAI;IACb;IAEA,MAAM2D,MAAM,GAAGD,EAAE,GAAGA,EAAE,GAAGH,EAAE,GAAGA,EAAE;IAEhC,OACE,IAAI,CAACrD,SAAS,KAAKrB,MAAM,CAACS,gBAAgB,IAAIqE,MAAM,GAAG,IAAI,CAACzD,SAAS;EAEzE;EAEOc,QAAQA,CAAA,EAAS;IACtB,KAAK,CAACA,QAAQ,CAAC,CAAC;IAEhB,IAAI,CAAC4C,GAAG,CAAC,CAAC;EACZ;EAEUC,QAAQA,CAAA,EAAS;IACzB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACxD,aAAa,CAAC,CAAC;EACtB;EAEUwD,aAAaA,CAAA,EAAS;IAC9B,IAAI,CAACxD,aAAa,CAAC,CAAC;IACpB,IAAI,CAACQ,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,0BAA0B,GAAG,CAAC;EACrC;AACF;AAACgD,OAAA,CAAApG,OAAA,GAAAuB,iBAAA","ignoreList":[]}