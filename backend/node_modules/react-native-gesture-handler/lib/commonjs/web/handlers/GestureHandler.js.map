{"version":3,"names":["_State","require","_interfaces","_GestureHandlerOrchestrator","_interopRequireDefault","_InteractionManager","_PointerTracker","_gestureHandlerCommon","_PointerType","e","__esModule","default","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","GestureHandler","constructor","delegate","State","UNDETERMINED","enabled","PointerTracker","PointerType","MOUSE","newState","oldState","onGestureHandlerEvent","onGestureHandlerStateChange","propsRef","current","resultEvent","transformEventData","lastSentState","invokeNullableMethod","state","ACTIVE","nativeEvent","undefined","_delegate","init","viewRef","attachEventManager","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerLeave","onPointerLeave","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setOnPointerMoveOver","onPointerMoveOver","setOnPointerMoveOut","onPointerMoveOut","setOnWheel","onWheel","registerListeners","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","sendIfDisabled","trackedPointersCount","config","needsPointerData","isFinished","cancelTouches","GestureHandlerOrchestrator","instance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","onFail","FAILED","cancel","CANCELLED","activate","force","manualActivation","onActivate","end","onEnd","END","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","shouldWaitForHandlerFailure","handler","InteractionManager","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","tryToSendTouchEvent","tryToSendMoveEvent","shouldCancelWhenOutside","_event","out","active","sendEvent","sendTouchEvent","touchEvent","transformTouchEvent","numberOfPointers","pointerInside","isPointerInBounds","getAbsoluteCoordsAverage","transformNativeEvent","handlerTag","target","timeStamp","Date","now","rect","measureView","all","changed","trackerData","trackedPointers","size","has","pointerId","forEach","element","key","id","getMappedTouchEventId","push","x","abosoluteCoords","pageX","y","pageY","absoluteX","absoluteY","eventType","EventTypes","CANCEL","TouchEventType","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","length","changedTouches","allTouches","cancelEvent","lastCoords","lastRelativeCoords","getRelativeCoordsAverage","updateGestureConfig","props","_config","onEnabledChange","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hasCustomActivationCriteria","hitSlop","left","right","width","Error","height","top","bottom","horizontal","vertical","getLastAbsoluteCoords","offsetX","offsetY","isButtonInConfig","mouseButton","MouseButton","LEFT","resetConfig","onDestroy","destroy","_handlerTag","_tracker","_state","_shouldCancelWhenOutside","_enabled","_pointerType","_active","awaiting","_awaiting","activationIndex","_activationIndex","_shouldResetProgress","getTrackedPointersID","trackedPointersIDs","exports","method","__getHandler","argMapping","__nodeConfig","Array","isArray","index","entries","nativeValue","setValue"],"sources":["GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport IGestureHandler from './IGestureHandler';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { PointerType } from '../../PointerType';\nimport { GestureHandlerDelegate } from '../tools/GestureHandlerDelegate';\n\nexport default abstract class GestureHandler implements IGestureHandler {\n  private lastSentState: State | null = null;\n\n  private _state: State = State.UNDETERMINED;\n\n  private _shouldCancelWhenOutside = false;\n  protected hasCustomActivationCriteria = false;\n  private _enabled = false;\n\n  private viewRef!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private _handlerTag!: number;\n  private _config: Config = { enabled: false };\n\n  private _tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  private _activationIndex = 0;\n\n  private _awaiting = false;\n  private _active = false;\n\n  private _shouldResetProgress = false;\n  private _pointerType: PointerType = PointerType.MOUSE;\n\n  private _delegate: GestureHandlerDelegate<unknown, IGestureHandler>;\n\n  public constructor(\n    delegate: GestureHandlerDelegate<unknown, IGestureHandler>\n  ) {\n    this._delegate = delegate;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(viewRef: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.viewRef = viewRef;\n\n    this.state = State.UNDETERMINED;\n\n    this.delegate.init(viewRef, this);\n  }\n\n  public attachEventManager(manager: EventManager<unknown>): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n    manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n    manager.setOnWheel(this.onWheel.bind(this));\n\n    manager.registerListeners();\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.delegate.reset();\n    this.state = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.state === newState) {\n      return;\n    }\n\n    const oldState = this.state;\n    this.state = newState;\n\n    if (\n      this.tracker.trackedPointersCount > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.instance.onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n\n    if (!this.enabled && this.isFinished()) {\n      this.state = State.UNDETERMINED;\n    }\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.state === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (this.state === State.ACTIVE || this.state === State.BEGAN) {\n      // Here the order of calling the delegate and moveToState is important.\n      // At this point we can use currentState as previuos state, because immediately after changing cursor we call moveToState method.\n      this.delegate.onFail();\n\n      this.moveToState(State.FAILED, sendIfDisabled);\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.state === State.ACTIVE ||\n      this.state === State.UNDETERMINED ||\n      this.state === State.BEGAN\n    ) {\n      this.onCancel();\n\n      // Same as above - order matters\n      this.delegate.onCancel();\n\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n    }\n  }\n\n  public activate(force = false) {\n    if (\n      (this.config.manualActivation !== true || force) &&\n      (this.state === State.UNDETERMINED || this.state === State.BEGAN)\n    ) {\n      this.delegate.onActivate();\n      this.moveToState(State.ACTIVE);\n    }\n  }\n\n  public end() {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      // Same as above - order matters\n      this.delegate.onEnd();\n\n      this.moveToState(State.END);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.instance.shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.instance.recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.instance.cancelMouseAndPenGestures(this);\n    }\n\n    // TODO: Bring back touch events along with introducing `handleDown` method that will handle handler specific stuff\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false, event);\n  }\n  protected onPointerLeave(event: AdaptedEvent): void {\n    if (this.shouldCancelWhenOutside) {\n      switch (this.state) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true, event);\n  }\n  protected onPointerMoveOver(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onPointerMoveOut(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onWheel(_event: AdaptedEvent): void {\n    // Used only by pan gesture handler\n  }\n  protected tryToSendMoveEvent(out: boolean, event: AdaptedEvent): void {\n    if ((out && this.shouldCancelWhenOutside) || !this.enabled) {\n      return;\n    }\n\n    if (this.active) {\n      this.sendEvent(this.state, this.state);\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected tryToSendTouchEvent(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.state === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.trackedPointersCount,\n        state: newState,\n        pointerInside: this.delegate.isPointerInBounds(\n          this.tracker.getAbsoluteCoordsAverage()\n        ),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.viewRef,\n        oldState: newState !== oldState ? oldState : undefined,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.trackedPointers;\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.pageX,\n        y: event.y - rect.pageY,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.state,\n        eventType: eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.trackedPointers;\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n\n      changed.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.state,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent(): Record<string, unknown> {\n    // Those properties are shared by most handlers and if not this method will be overriden\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const lastRelativeCoords = this.tracker.getRelativeCoordsAverage();\n\n    return {\n      x: lastRelativeCoords.x,\n      y: lastRelativeCoords.y,\n      absoluteX: lastCoords.x,\n      absoluteY: lastCoords.y,\n    };\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this._config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    this.delegate.onEnabledChange(enabled);\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.shouldCancelWhenOutside = this.config.shouldCancelWhenOutside;\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.state) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const { width, height } = this.delegate.measureView();\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect = this.delegate.measureView();\n    const { x, y } = this.tracker.getLastAbsoluteCoords();\n    const offsetX: number = x - rect.pageX;\n    const offsetY: number = y - rect.pageY;\n\n    return (\n      offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom\n    );\n  }\n\n  public isButtonInConfig(mouseButton: MouseButton | undefined) {\n    return (\n      !mouseButton ||\n      (!this.config.mouseButton && mouseButton === MouseButton.LEFT) ||\n      (this.config.mouseButton && mouseButton & this.config.mouseButton)\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  public onDestroy(): void {\n    this.delegate.destroy(this.config);\n  }\n\n  //\n  // Getters and setters\n  //\n\n  public get handlerTag() {\n    return this._handlerTag;\n  }\n  public set handlerTag(value: number) {\n    this._handlerTag = value;\n  }\n\n  public get config(): Config {\n    return this._config;\n  }\n\n  public get delegate() {\n    return this._delegate;\n  }\n\n  public get tracker() {\n    return this._tracker;\n  }\n\n  public get state(): State {\n    return this._state;\n  }\n  protected set state(value: State) {\n    this._state = value;\n  }\n\n  public get shouldCancelWhenOutside() {\n    return this._shouldCancelWhenOutside;\n  }\n  protected set shouldCancelWhenOutside(value) {\n    this._shouldCancelWhenOutside = value;\n  }\n\n  public get enabled() {\n    return this._enabled;\n  }\n  protected set enabled(value) {\n    this._enabled = value;\n  }\n\n  public get pointerType(): PointerType {\n    return this._pointerType;\n  }\n  protected set pointerType(value: PointerType) {\n    this._pointerType = value;\n  }\n\n  public get active() {\n    return this._active;\n  }\n  protected set active(value) {\n    this._active = value;\n  }\n\n  public get awaiting() {\n    return this._awaiting;\n  }\n  protected set awaiting(value) {\n    this._awaiting = value;\n  }\n\n  public get activationIndex() {\n    return this._activationIndex;\n  }\n  protected set activationIndex(value) {\n    this._activationIndex = value;\n  }\n\n  public get shouldResetProgress() {\n    return this._shouldResetProgress;\n  }\n  protected set shouldResetProgress(value) {\n    this._shouldResetProgress = value;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.trackedPointersIDs;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.state === State.END ||\n      this.state === State.FAILED ||\n      this.state === State.CANCELLED\n    );\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping }: { argMapping: unknown } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      // Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      // RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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","ignoreList":[]}