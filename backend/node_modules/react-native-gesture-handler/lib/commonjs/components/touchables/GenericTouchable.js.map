{"version":3,"names":["_react","_interopRequireWildcard","require","React","_reactNative","_State","_GestureButtons","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","TOUCHABLE_STATE","exports","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","Component","constructor","args","nativeEvent","pointerInside","onMoveIn","onMoveOut","state","State","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","STATE","handlePressIn","END","shouldCallOnPress","longPressDetected","pressOutTimeout","handleGoToUndetermined","_this$props$onPress","_this$props","props","onPress","_this$props$onLongPre","_this$props2","onLongPress","delayPressIn","pressInTimeout","setTimeout","time","delayLongPress","longPressTimeout","onLongPressDetected","handleMoveOutside","delayPressOut","clearTimeout","componentDidMount","reset","newState","_this$props$onStateCh","_this$props6","_this$props$onPressIn","_this$props3","onPressIn","_this$props$onPressOu","_this$props4","onPressOut","_this$props$onPressOu2","_this$props5","onStateChange","componentWillUnmount","render","_ref","_this$props$touchSoun","hitSlop","top","left","bottom","right","undefined","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","createElement","BaseButton","style","containerStyle","onHandlerStateChange","disabled","onGestureEvent","userSelect","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","enabled","extraButtonProps","Animated","View","children","rippleColor","exclusive"],"sources":["GenericTouchable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport type { NativeViewGestureHandlerPayload } from '../../handlers/GestureHandlerEventPayload';\nimport type { TouchableNativeFeedbackExtraProps } from './TouchableNativeFeedbackProps';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = (typeof TOUCHABLE_STATE)[keyof typeof TOUCHABLE_STATE];\n\ninterface InternalProps {\n  extraButtonProps: TouchableNativeFeedbackExtraProps;\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // Timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // Reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // Checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // To prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // Long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        userSelect={this.props.userSelect}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}