{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_createNativeWrapper","_interopRequireDefault","_GestureHandlerButton","_State","_utils","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","RawButton","exports","createNativeWrapper","GestureHandlerButton","shouldCancelWhenOutside","shouldActivateOnStart","IS_FABRIC","InnerBaseButton","Component","constructor","props","nativeEvent","state","oldState","pointerInside","active","State","ACTIVE","lastActive","onActiveStateChange","longPressDetected","CANCELLED","onPress","Platform","OS","BEGAN","onLongPress","longPressTimeout","setTimeout","delayLongPress","undefined","clearTimeout","END","FAILED","_this$props$onLongPre","_this$props","_this$props$onHandler","_this$props2","onHandlerStateChange","handleEvent","_this$props$onGesture","_this$props3","onGestureEvent","render","rippleColor","unprocessedRippleColor","style","rest","isFabric","processColor","createElement","ref","innerRef","cursor","BaseButton","forwardRef","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","InnerRectButton","_this$props$onActiveS","_this$props4","opacity","setValue","activeOpacity","Value","children","resolvedStyle","flatten","View","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","RectButton","InnerBorderlessButton","_this$props$onActiveS2","_this$props5","borderless","BorderlessButton"],"sources":["GestureButtons.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport type { NativeViewGestureHandlerPayload } from '../handlers/GestureHandlerEventPayload';\nimport type {\n  BaseButtonWithRefProps,\n  BaseButtonProps,\n  RectButtonWithRefProps,\n  RectButtonProps,\n  BorderlessButtonWithRefProps,\n  BorderlessButtonProps,\n} from './GestureButtonsProps';\nimport { isFabric } from '../utils';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nlet IS_FABRIC: null | boolean = null;\n\nclass InnerBaseButton extends React.Component<BaseButtonWithRefProps> {\n  static defaultProps = {\n    delayLongPress: 600,\n  };\n\n  private lastActive: boolean;\n  private longPressTimeout: ReturnType<typeof setTimeout> | undefined;\n  private longPressDetected: boolean;\n\n  constructor(props: BaseButtonProps) {\n    super(props);\n    this.lastActive = false;\n    this.longPressDetected = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      !this.longPressDetected &&\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(pointerInside);\n    }\n\n    if (\n      !this.lastActive &&\n      // NativeViewGestureHandler sends different events based on platform\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      pointerInside\n    ) {\n      this.longPressDetected = false;\n      if (this.props.onLongPress) {\n        this.longPressTimeout = setTimeout(\n          this.onLongPress,\n          this.props.delayLongPress\n        );\n      }\n    } else if (\n      // Cancel longpress timeout if it's set and the finger moved out of the view\n      state === State.ACTIVE &&\n      !pointerInside &&\n      this.longPressTimeout !== undefined\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    } else if (\n      // Cancel longpress timeout if it's set and the gesture has finished\n      this.longPressTimeout !== undefined &&\n      (state === State.END ||\n        state === State.CANCELLED ||\n        state === State.FAILED)\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    }\n\n    this.lastActive = active;\n  };\n\n  private onLongPress = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress?.();\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor: unprocessedRippleColor, style, ...rest } = this.props;\n\n    if (IS_FABRIC === null) {\n      IS_FABRIC = isFabric();\n    }\n\n    const rippleColor = IS_FABRIC\n      ? unprocessedRippleColor\n      : processColor(unprocessedRippleColor ?? undefined);\n\n    return (\n      <RawButton\n        ref={this.props.innerRef}\n        rippleColor={rippleColor}\n        style={[style, Platform.OS === 'ios' && { cursor: undefined }]}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nexport const BaseButton = React.forwardRef<\n  any,\n  Omit<BaseButtonProps, 'innerRef'>\n>((props, ref) => <InnerBaseButton innerRef={ref} {...props} />);\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nclass InnerRectButton extends React.Component<RectButtonWithRefProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        ref={this.props.innerRef}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport const RectButton = React.forwardRef<\n  any,\n  Omit<RectButtonProps, 'innerRef'>\n>((props, ref) => <InnerRectButton innerRef={ref} {...props} />);\n\nclass InnerBorderlessButton extends React.Component<BorderlessButtonWithRefProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, innerRef, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        // @ts-ignore We don't want `innerRef` to be accessible from public API.\n        // However in this case we need to set it indirectly on `BaseButton`, hence we use ts-ignore\n        innerRef={innerRef}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport const BorderlessButton = React.forwardRef<\n  any,\n  Omit<BorderlessButtonProps, 'innerRef'>\n>((props, ref) => <InnerBorderlessButton innerRef={ref} {...props} />);\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"],"mappings":"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","ignoreList":[]}