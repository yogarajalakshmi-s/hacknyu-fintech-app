{"version":3,"names":["numberAsInset","value","left","right","top","bottom","exports","addInsets","a","b","_a$left","_b$left","_a$right","_b$right","_a$top","_b$top","_a$bottom","_b$bottom","touchDataToPressEvent","data","timestamp","targetId","identifier","id","locationX","x","locationY","y","pageX","absoluteX","pageY","absoluteY","target","touches","changedTouches","gestureToPressEvent","event","handlerTag","isTouchWithinInset","dimensions","inset","touch","_touch$x","_inset$right","_touch$y","_inset$bottom","_touch$x2","_inset$left","_touch$y2","_inset$top","width","height","gestureToPressableEvent","Date","now","pressEvent","nativeEvent","force","undefined","gestureTouchToPressableEvent","_event$allTouches$at$","_event$allTouches$at","_event$allTouches$at$2","_event$allTouches$at2","_event$allTouches$at$3","_event$allTouches$at3","_event$allTouches$at$4","_event$allTouches$at4","touchesList","allTouches","map","changedTouchesList","at"],"sources":["utils.ts"],"sourcesContent":["import { Insets } from 'react-native';\nimport {\n  HoverGestureHandlerEventPayload,\n  LongPressGestureHandlerEventPayload,\n} from '../../handlers/GestureHandlerEventPayload';\nimport {\n  TouchData,\n  GestureStateChangeEvent,\n  GestureTouchEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { InnerPressableEvent, PressableEvent } from './PressableProps';\n\nconst numberAsInset = (value: number): Insets => ({\n  left: value,\n  right: value,\n  top: value,\n  bottom: value,\n});\n\nconst addInsets = (a: Insets, b: Insets): Insets => ({\n  left: (a.left ?? 0) + (b.left ?? 0),\n  right: (a.right ?? 0) + (b.right ?? 0),\n  top: (a.top ?? 0) + (b.top ?? 0),\n  bottom: (a.bottom ?? 0) + (b.bottom ?? 0),\n});\n\nconst touchDataToPressEvent = (\n  data: TouchData,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: data.id,\n  locationX: data.x,\n  locationY: data.y,\n  pageX: data.absoluteX,\n  pageY: data.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst gestureToPressEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: event.handlerTag,\n  locationX: event.x,\n  locationY: event.y,\n  pageX: event.absoluteX,\n  pageY: event.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst isTouchWithinInset = (\n  dimensions: { width: number; height: number },\n  inset: Insets,\n  touch?: TouchData\n) =>\n  (touch?.x ?? 0) < (inset.right ?? 0) + dimensions.width &&\n  (touch?.y ?? 0) < (inset.bottom ?? 0) + dimensions.height &&\n  (touch?.x ?? 0) > -(inset.left ?? 0) &&\n  (touch?.y ?? 0) > -(inset.top ?? 0);\n\nconst gestureToPressableEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const pressEvent = gestureToPressEvent(event, timestamp, targetId);\n\n  return {\n    nativeEvent: {\n      touches: [pressEvent],\n      changedTouches: [pressEvent],\n      identifier: pressEvent.identifier,\n      locationX: event.x,\n      locationY: event.y,\n      pageX: event.absoluteX,\n      pageY: event.absoluteY,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nconst gestureTouchToPressableEvent = (\n  event: GestureTouchEvent\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const touchesList = event.allTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n  const changedTouchesList = event.changedTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n\n  return {\n    nativeEvent: {\n      touches: touchesList,\n      changedTouches: changedTouchesList,\n      identifier: event.handlerTag,\n      locationX: event.allTouches.at(0)?.x ?? -1,\n      locationY: event.allTouches.at(0)?.y ?? -1,\n      pageX: event.allTouches.at(0)?.absoluteX ?? -1,\n      pageY: event.allTouches.at(0)?.absoluteY ?? -1,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nexport {\n  numberAsInset,\n  addInsets,\n  isTouchWithinInset,\n  gestureToPressableEvent,\n  gestureTouchToPressableEvent,\n};\n"],"mappings":";;;;;;AAYA,MAAMA,aAAa,GAAIC,KAAa,KAAc;EAChDC,IAAI,EAAED,KAAK;EACXE,KAAK,EAAEF,KAAK;EACZG,GAAG,EAAEH,KAAK;EACVI,MAAM,EAAEJ;AACV,CAAC,CAAC;AAACK,OAAA,CAAAN,aAAA,GAAAA,aAAA;AAEH,MAAMO,SAAS,GAAGA,CAACC,CAAS,EAAEC,CAAS;EAAA,IAAAC,OAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAC,SAAA;EAAA,OAAc;IACnDf,IAAI,EAAE,EAAAQ,OAAA,GAACF,CAAC,CAACN,IAAI,cAAAQ,OAAA,cAAAA,OAAA,GAAI,CAAC,MAAAC,OAAA,GAAKF,CAAC,CAACP,IAAI,cAAAS,OAAA,cAAAA,OAAA,GAAI,CAAC,CAAC;IACnCR,KAAK,EAAE,EAAAS,QAAA,GAACJ,CAAC,CAACL,KAAK,cAAAS,QAAA,cAAAA,QAAA,GAAI,CAAC,MAAAC,QAAA,GAAKJ,CAAC,CAACN,KAAK,cAAAU,QAAA,cAAAA,QAAA,GAAI,CAAC,CAAC;IACtCT,GAAG,EAAE,EAAAU,MAAA,GAACN,CAAC,CAACJ,GAAG,cAAAU,MAAA,cAAAA,MAAA,GAAI,CAAC,MAAAC,MAAA,GAAKN,CAAC,CAACL,GAAG,cAAAW,MAAA,cAAAA,MAAA,GAAI,CAAC,CAAC;IAChCV,MAAM,EAAE,EAAAW,SAAA,GAACR,CAAC,CAACH,MAAM,cAAAW,SAAA,cAAAA,SAAA,GAAI,CAAC,MAAAC,SAAA,GAAKR,CAAC,CAACJ,MAAM,cAAAY,SAAA,cAAAA,SAAA,GAAI,CAAC;EAC1C,CAAC;AAAA,CAAC;AAACX,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAEH,MAAMW,qBAAqB,GAAGA,CAC5BC,IAAe,EACfC,SAAiB,EACjBC,QAAgB,MACS;EACzBC,UAAU,EAAEH,IAAI,CAACI,EAAE;EACnBC,SAAS,EAAEL,IAAI,CAACM,CAAC;EACjBC,SAAS,EAAEP,IAAI,CAACQ,CAAC;EACjBC,KAAK,EAAET,IAAI,CAACU,SAAS;EACrBC,KAAK,EAAEX,IAAI,CAACY,SAAS;EACrBC,MAAM,EAAEX,QAAQ;EAChBD,SAAS,EAAEA,SAAS;EACpBa,OAAO,EAAE,EAAE;EAAE;EACbC,cAAc,EAAE,EAAE,CAAE;AACtB,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAGA,CAC1BC,KAEC,EACDhB,SAAiB,EACjBC,QAAgB,MACS;EACzBC,UAAU,EAAEc,KAAK,CAACC,UAAU;EAC5Bb,SAAS,EAAEY,KAAK,CAACX,CAAC;EAClBC,SAAS,EAAEU,KAAK,CAACT,CAAC;EAClBC,KAAK,EAAEQ,KAAK,CAACP,SAAS;EACtBC,KAAK,EAAEM,KAAK,CAACL,SAAS;EACtBC,MAAM,EAAEX,QAAQ;EAChBD,SAAS,EAAEA,SAAS;EACpBa,OAAO,EAAE,EAAE;EAAE;EACbC,cAAc,EAAE,EAAE,CAAE;AACtB,CAAC,CAAC;AAEF,MAAMI,kBAAkB,GAAGA,CACzBC,UAA6C,EAC7CC,KAAa,EACbC,KAAiB;EAAA,IAAAC,QAAA,EAAAC,YAAA,EAAAC,QAAA,EAAAC,aAAA,EAAAC,SAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,UAAA;EAAA,OAEjB,EAAAP,QAAA,GAACD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEhB,CAAC,cAAAiB,QAAA,cAAAA,QAAA,GAAI,CAAC,IAAI,EAAAC,YAAA,GAACH,KAAK,CAACrC,KAAK,cAAAwC,YAAA,cAAAA,YAAA,GAAI,CAAC,IAAIJ,UAAU,CAACW,KAAK,IACvD,EAAAN,QAAA,GAACH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEd,CAAC,cAAAiB,QAAA,cAAAA,QAAA,GAAI,CAAC,IAAI,EAAAC,aAAA,GAACL,KAAK,CAACnC,MAAM,cAAAwC,aAAA,cAAAA,aAAA,GAAI,CAAC,IAAIN,UAAU,CAACY,MAAM,IACzD,EAAAL,SAAA,GAACL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEhB,CAAC,cAAAqB,SAAA,cAAAA,SAAA,GAAI,CAAC,IAAI,GAAAC,WAAA,GAAEP,KAAK,CAACtC,IAAI,cAAA6C,WAAA,cAAAA,WAAA,GAAI,CAAC,CAAC,IACpC,EAAAC,SAAA,GAACP,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEd,CAAC,cAAAqB,SAAA,cAAAA,SAAA,GAAI,CAAC,IAAI,GAAAC,UAAA,GAAET,KAAK,CAACpC,GAAG,cAAA6C,UAAA,cAAAA,UAAA,GAAI,CAAC,CAAC;AAAA;AAAC3C,OAAA,CAAAgC,kBAAA,GAAAA,kBAAA;AAEtC,MAAMc,uBAAuB,GAC3BhB,KAEC,IACkB;EACnB,MAAMhB,SAAS,GAAGiC,IAAI,CAACC,GAAG,CAAC,CAAC;;EAE5B;EACA,MAAMjC,QAAQ,GAAG,CAAC;EAElB,MAAMkC,UAAU,GAAGpB,mBAAmB,CAACC,KAAK,EAAEhB,SAAS,EAAEC,QAAQ,CAAC;EAElE,OAAO;IACLmC,WAAW,EAAE;MACXvB,OAAO,EAAE,CAACsB,UAAU,CAAC;MACrBrB,cAAc,EAAE,CAACqB,UAAU,CAAC;MAC5BjC,UAAU,EAAEiC,UAAU,CAACjC,UAAU;MACjCE,SAAS,EAAEY,KAAK,CAACX,CAAC;MAClBC,SAAS,EAAEU,KAAK,CAACT,CAAC;MAClBC,KAAK,EAAEQ,KAAK,CAACP,SAAS;MACtBC,KAAK,EAAEM,KAAK,CAACL,SAAS;MACtBC,MAAM,EAAEX,QAAQ;MAChBD,SAAS,EAAEA,SAAS;MACpBqC,KAAK,EAAEC;IACT;EACF,CAAC;AACH,CAAC;AAACpD,OAAA,CAAA8C,uBAAA,GAAAA,uBAAA;AAEF,MAAMO,4BAA4B,GAChCvB,KAAwB,IACL;EAAA,IAAAwB,qBAAA,EAAAC,oBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA;EACnB,MAAM/C,SAAS,GAAGiC,IAAI,CAACC,GAAG,CAAC,CAAC;;EAE5B;EACA,MAAMjC,QAAQ,GAAG,CAAC;EAElB,MAAM+C,WAAW,GAAGhC,KAAK,CAACiC,UAAU,CAACC,GAAG,CAAE7B,KAAgB,IACxDvB,qBAAqB,CAACuB,KAAK,EAAErB,SAAS,EAAEC,QAAQ,CAClD,CAAC;EACD,MAAMkD,kBAAkB,GAAGnC,KAAK,CAACF,cAAc,CAACoC,GAAG,CAAE7B,KAAgB,IACnEvB,qBAAqB,CAACuB,KAAK,EAAErB,SAAS,EAAEC,QAAQ,CAClD,CAAC;EAED,OAAO;IACLmC,WAAW,EAAE;MACXvB,OAAO,EAAEmC,WAAW;MACpBlC,cAAc,EAAEqC,kBAAkB;MAClCjD,UAAU,EAAEc,KAAK,CAACC,UAAU;MAC5Bb,SAAS,GAAAoC,qBAAA,IAAAC,oBAAA,GAAEzB,KAAK,CAACiC,UAAU,CAACG,EAAE,CAAC,CAAC,CAAC,cAAAX,oBAAA,uBAAtBA,oBAAA,CAAwBpC,CAAC,cAAAmC,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;MAC1ClC,SAAS,GAAAoC,sBAAA,IAAAC,qBAAA,GAAE3B,KAAK,CAACiC,UAAU,CAACG,EAAE,CAAC,CAAC,CAAC,cAAAT,qBAAA,uBAAtBA,qBAAA,CAAwBpC,CAAC,cAAAmC,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAC;MAC1ClC,KAAK,GAAAoC,sBAAA,IAAAC,qBAAA,GAAE7B,KAAK,CAACiC,UAAU,CAACG,EAAE,CAAC,CAAC,CAAC,cAAAP,qBAAA,uBAAtBA,qBAAA,CAAwBpC,SAAS,cAAAmC,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAC;MAC9ClC,KAAK,GAAAoC,sBAAA,IAAAC,qBAAA,GAAE/B,KAAK,CAACiC,UAAU,CAACG,EAAE,CAAC,CAAC,CAAC,cAAAL,qBAAA,uBAAtBA,qBAAA,CAAwBpC,SAAS,cAAAmC,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAC;MAC9ClC,MAAM,EAAEX,QAAQ;MAChBD,SAAS,EAAEA,SAAS;MACpBqC,KAAK,EAAEC;IACT;EACF,CAAC;AACH,CAAC;AAACpD,OAAA,CAAAqD,4BAAA,GAAAA,4BAAA","ignoreList":[]}