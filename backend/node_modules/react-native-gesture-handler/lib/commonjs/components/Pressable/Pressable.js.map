{"version":3,"names":["_react","_interopRequireWildcard","require","_gestureObjects","_GestureDetector","_reactNative","_GestureHandlerButton","_interopRequireDefault","_utils","_PressabilityDebugView","_utils2","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","DEFAULT_LONG_PRESS_DURATION","IS_TEST_ENV","isTestEnv","IS_FABRIC","Pressable","props","_android_ripple$radiu","testOnly_pressed","hitSlop","pressRetentionOffset","delayHoverIn","onHoverIn","delayHoverOut","onHoverOut","delayLongPress","unstable_pressDelay","onPress","onPressIn","onPressOut","onLongPress","style","children","android_disableSound","android_ripple","disabled","remainingProps","pressedState","setPressedState","useState","pressableRef","useRef","isPressCallbackEnabled","hasPassedBoundsChecks","shouldPreventNativeEffects","normalizedHitSlop","useMemo","numberAsInset","normalizedPressRetentionOffset","hoverInTimeout","hoverOutTimeout","hoverGesture","Gesture","Hover","manualActivation","cancelsTouchesInView","onBegin","event","current","clearTimeout","setTimeout","gestureToPressableEvent","onFinalize","pressDelayTimeoutRef","isTouchPropagationAllowed","deferredEventPayload","pressInHandler","useCallback","handlingOnTouchesDown","pressOutHandler","nativeEvent","touches","changedTouches","longPressTimeoutRef","onEndHandlingTouchesDown","cancelledMidPress","activateLongPress","gestureTouchToPressableEvent","longPressMinDuration","pressAndTouchGesture","LongPress","minDuration","INT32_MAX","maxDistance","onTouchesDown","_pressableRef$current","measure","_x","_y","width","height","_onEndHandlingTouches","isTouchWithinInset","at","onTouchesUp","onTouchesCancelled","allTouches","buttonGesture","Native","Platform","OS","onStart","appliedHitSlop","addInsets","isPressableEnabled","gestures","gesture","enabled","runOnJS","shouldCancelWhenOutside","Simultaneous","pointerStyle","cursor","styleProp","pressed","childrenProp","rippleColor","_android_ripple$color","isFabric","defaultRippleColor","undefined","unprocessedRippleColor","color","processColor","createElement","GestureDetector","ref","touchSoundDisabled","rippleRadius","radius","testOnly_onPress","testOnly_onPressIn","testOnly_onPressOut","testOnly_onLongPress","__DEV__","PressabilityDebugView"],"sources":["Pressable.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport { PressableEvent, PressableProps } from './PressableProps';\nimport {\n  Insets,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  processColor,\n} from 'react-native';\nimport NativeButton from '../GestureHandlerButton';\nimport {\n  numberAsInset,\n  gestureToPressableEvent,\n  isTouchWithinInset,\n  gestureTouchToPressableEvent,\n  addInsets,\n} from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { GestureTouchEvent } from '../../handlers/gestureHandlerCommon';\nimport { INT32_MAX, isFabric, isTestEnv } from '../../utils';\n\nconst DEFAULT_LONG_PRESS_DURATION = 500;\nconst IS_TEST_ENV = isTestEnv();\n\nlet IS_FABRIC: null | boolean = null;\n\nexport default function Pressable(props: PressableProps) {\n  const {\n    testOnly_pressed,\n    hitSlop,\n    pressRetentionOffset,\n    delayHoverIn,\n    onHoverIn,\n    delayHoverOut,\n    onHoverOut,\n    delayLongPress,\n    unstable_pressDelay,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    style,\n    children,\n    android_disableSound,\n    android_ripple,\n    disabled,\n    ...remainingProps\n  } = props;\n\n  const [pressedState, setPressedState] = useState(testOnly_pressed ?? false);\n\n  const pressableRef = useRef<View>(null);\n\n  // Disabled when onLongPress has been called\n  const isPressCallbackEnabled = useRef<boolean>(true);\n  const hasPassedBoundsChecks = useRef<boolean>(false);\n  const shouldPreventNativeEffects = useRef<boolean>(false);\n\n  const normalizedHitSlop: Insets = useMemo(\n    () =>\n      typeof hitSlop === 'number' ? numberAsInset(hitSlop) : (hitSlop ?? {}),\n    [hitSlop]\n  );\n\n  const normalizedPressRetentionOffset: Insets = useMemo(\n    () =>\n      typeof pressRetentionOffset === 'number'\n        ? numberAsInset(pressRetentionOffset)\n        : (pressRetentionOffset ?? {}),\n    [pressRetentionOffset]\n  );\n\n  const hoverInTimeout = useRef<number | null>(null);\n  const hoverOutTimeout = useRef<number | null>(null);\n\n  const hoverGesture = useMemo(\n    () =>\n      Gesture.Hover()\n        .manualActivation(true) // Stops Hover from blocking Native gesture activation on web\n        .cancelsTouchesInView(false)\n        .onBegin((event) => {\n          if (hoverOutTimeout.current) {\n            clearTimeout(hoverOutTimeout.current);\n          }\n          if (delayHoverIn) {\n            hoverInTimeout.current = setTimeout(\n              () => onHoverIn?.(gestureToPressableEvent(event)),\n              delayHoverIn\n            );\n            return;\n          }\n          onHoverIn?.(gestureToPressableEvent(event));\n        })\n        .onFinalize((event) => {\n          if (hoverInTimeout.current) {\n            clearTimeout(hoverInTimeout.current);\n          }\n          if (delayHoverOut) {\n            hoverOutTimeout.current = setTimeout(\n              () => onHoverOut?.(gestureToPressableEvent(event)),\n              delayHoverOut\n            );\n            return;\n          }\n          onHoverOut?.(gestureToPressableEvent(event));\n        }),\n    [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]\n  );\n\n  const pressDelayTimeoutRef = useRef<number | null>(null);\n  const isTouchPropagationAllowed = useRef<boolean>(false);\n\n  // iOS only: due to varying flow of gestures, events sometimes have to be saved for later use\n  const deferredEventPayload = useRef<PressableEvent | null>(null);\n\n  const pressInHandler = useCallback(\n    (event: PressableEvent) => {\n      if (handlingOnTouchesDown.current) {\n        deferredEventPayload.current = event;\n      }\n\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      deferredEventPayload.current = null;\n\n      onPressIn?.(event);\n      isPressCallbackEnabled.current = true;\n      pressDelayTimeoutRef.current = null;\n      setPressedState(true);\n    },\n    [onPressIn]\n  );\n\n  const pressOutHandler = useCallback(\n    (event: PressableEvent) => {\n      if (\n        !hasPassedBoundsChecks.current ||\n        event.nativeEvent.touches.length >\n          event.nativeEvent.changedTouches.length\n      ) {\n        return;\n      }\n\n      if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n        // When delay is preemptively finished by lifting touches,\n        // we want to immediately activate it's effects - pressInHandler,\n        // even though we are located at the pressOutHandler\n        clearTimeout(pressDelayTimeoutRef.current);\n        pressInHandler(event);\n      }\n\n      if (deferredEventPayload.current) {\n        onPressIn?.(deferredEventPayload.current);\n        deferredEventPayload.current = null;\n      }\n\n      onPressOut?.(event);\n\n      if (isPressCallbackEnabled.current) {\n        onPress?.(event);\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n\n      isTouchPropagationAllowed.current = false;\n      hasPassedBoundsChecks.current = false;\n      isPressCallbackEnabled.current = true;\n      setPressedState(false);\n    },\n    [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]\n  );\n\n  const handlingOnTouchesDown = useRef<boolean>(false);\n  const onEndHandlingTouchesDown = useRef<(() => void) | null>(null);\n  const cancelledMidPress = useRef<boolean>(false);\n\n  const activateLongPress = useCallback(\n    (event: GestureTouchEvent) => {\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      if (hasPassedBoundsChecks.current) {\n        onLongPress?.(gestureTouchToPressableEvent(event));\n        isPressCallbackEnabled.current = false;\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n    },\n    [onLongPress]\n  );\n\n  const longPressTimeoutRef = useRef<number | null>(null);\n  const longPressMinDuration =\n    (delayLongPress ?? DEFAULT_LONG_PRESS_DURATION) +\n    (unstable_pressDelay ?? 0);\n\n  const pressAndTouchGesture = useMemo(\n    () =>\n      Gesture.LongPress()\n        .minDuration(INT32_MAX) // Stops long press from blocking native gesture\n        .maxDistance(INT32_MAX) // Stops long press from cancelling after set distance\n        .cancelsTouchesInView(false)\n        .onTouchesDown((event) => {\n          handlingOnTouchesDown.current = true;\n          pressableRef.current?.measure((_x, _y, width, height) => {\n            if (\n              !isTouchWithinInset(\n                {\n                  width,\n                  height,\n                },\n                normalizedHitSlop,\n                event.changedTouches.at(-1)\n              ) ||\n              hasPassedBoundsChecks.current ||\n              cancelledMidPress.current\n            ) {\n              cancelledMidPress.current = false;\n              onEndHandlingTouchesDown.current = null;\n              handlingOnTouchesDown.current = false;\n              return;\n            }\n\n            hasPassedBoundsChecks.current = true;\n\n            // In case of multiple touches, the first one starts long press gesture\n            if (longPressTimeoutRef.current === null) {\n              // Start long press gesture timer\n              longPressTimeoutRef.current = setTimeout(\n                () => activateLongPress(event),\n                longPressMinDuration\n              );\n            }\n\n            if (unstable_pressDelay) {\n              pressDelayTimeoutRef.current = setTimeout(() => {\n                pressInHandler(gestureTouchToPressableEvent(event));\n              }, unstable_pressDelay);\n            } else {\n              pressInHandler(gestureTouchToPressableEvent(event));\n            }\n\n            onEndHandlingTouchesDown.current?.();\n            onEndHandlingTouchesDown.current = null;\n            handlingOnTouchesDown.current = false;\n          });\n        })\n        .onTouchesUp((event) => {\n          if (handlingOnTouchesDown.current) {\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n          // On iOS, short taps will make LongPress gesture call onTouchesUp before Native gesture calls onStart\n          // This variable ensures that onStart isn't detected as the first gesture since Pressable is pressed.\n          if (deferredEventPayload.current !== null) {\n            shouldPreventNativeEffects.current = true;\n          }\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        })\n        .onTouchesCancelled((event) => {\n          isPressCallbackEnabled.current = false;\n\n          if (handlingOnTouchesDown.current) {\n            cancelledMidPress.current = true;\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n\n          if (\n            !hasPassedBoundsChecks.current ||\n            event.allTouches.length > event.changedTouches.length\n          ) {\n            return;\n          }\n\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        }),\n    [\n      activateLongPress,\n      longPressMinDuration,\n      normalizedHitSlop,\n      pressInHandler,\n      pressOutHandler,\n      unstable_pressDelay,\n    ]\n  );\n\n  // RNButton is placed inside ButtonGesture to enable Android's ripple and to capture non-propagating events\n  const buttonGesture = useMemo(\n    () =>\n      Gesture.Native()\n        .onBegin(() => {\n          // Android sets BEGAN state on press down\n          if (Platform.OS === 'android' || Platform.OS === 'macos') {\n            isTouchPropagationAllowed.current = true;\n          }\n        })\n        .onStart(() => {\n          if (Platform.OS === 'web') {\n            isTouchPropagationAllowed.current = true;\n          }\n\n          // iOS sets ACTIVE state on press down\n          if (Platform.OS !== 'ios') {\n            return;\n          }\n\n          if (deferredEventPayload.current) {\n            isTouchPropagationAllowed.current = true;\n\n            if (hasPassedBoundsChecks.current) {\n              pressInHandler(deferredEventPayload.current);\n              deferredEventPayload.current = null;\n            } else {\n              pressOutHandler(deferredEventPayload.current);\n              isTouchPropagationAllowed.current = false;\n            }\n\n            return;\n          }\n\n          if (hasPassedBoundsChecks.current) {\n            isTouchPropagationAllowed.current = true;\n            return;\n          }\n\n          if (shouldPreventNativeEffects.current) {\n            shouldPreventNativeEffects.current = false;\n            return;\n          }\n\n          isTouchPropagationAllowed.current = true;\n        }),\n    [pressInHandler, pressOutHandler]\n  );\n\n  const appliedHitSlop = addInsets(\n    normalizedHitSlop,\n    normalizedPressRetentionOffset\n  );\n\n  const isPressableEnabled = disabled !== true;\n\n  const gestures = [buttonGesture, pressAndTouchGesture, hoverGesture];\n\n  for (const gesture of gestures) {\n    gesture.enabled(isPressableEnabled);\n    gesture.runOnJS(true);\n    gesture.hitSlop(appliedHitSlop);\n    gesture.shouldCancelWhenOutside(Platform.OS === 'web' ? false : true);\n  }\n\n  // Uses different hitSlop, to activate on hitSlop area instead of pressRetentionOffset area\n  buttonGesture.hitSlop(normalizedHitSlop);\n\n  const gesture = Gesture.Simultaneous(...gestures);\n\n  // `cursor: 'pointer'` on `RNButton` crashes iOS\n  const pointerStyle: StyleProp<ViewStyle> =\n    Platform.OS === 'web' ? { cursor: 'pointer' } : {};\n\n  const styleProp =\n    typeof style === 'function' ? style({ pressed: pressedState }) : style;\n\n  const childrenProp =\n    typeof children === 'function'\n      ? children({ pressed: pressedState })\n      : children;\n\n  const rippleColor = useMemo(() => {\n    if (IS_FABRIC === null) {\n      IS_FABRIC = isFabric();\n    }\n\n    const defaultRippleColor = android_ripple ? undefined : 'transparent';\n    const unprocessedRippleColor = android_ripple?.color ?? defaultRippleColor;\n    return IS_FABRIC\n      ? unprocessedRippleColor\n      : processColor(unprocessedRippleColor);\n  }, [android_ripple]);\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <NativeButton\n        {...remainingProps}\n        ref={pressableRef}\n        hitSlop={appliedHitSlop}\n        enabled={isPressableEnabled}\n        touchSoundDisabled={android_disableSound ?? undefined}\n        rippleColor={rippleColor}\n        rippleRadius={android_ripple?.radius ?? undefined}\n        style={[pointerStyle, styleProp]}\n        testOnly_onPress={IS_TEST_ENV ? onPress : undefined}\n        testOnly_onPressIn={IS_TEST_ENV ? onPressIn : undefined}\n        testOnly_onPressOut={IS_TEST_ENV ? onPressOut : undefined}\n        testOnly_onLongPress={IS_TEST_ENV ? onLongPress : undefined}>\n        {childrenProp}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"red\" hitSlop={normalizedHitSlop} />\n        ) : null}\n      </NativeButton>\n    </GestureDetector>\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AAEA,IAAAG,YAAA,GAAAH,OAAA;AAQA,IAAAI,qBAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAOA,IAAAO,sBAAA,GAAAP,OAAA;AAEA,IAAAQ,OAAA,GAAAR,OAAA;AAA6D,SAAAK,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,yBAAAH,CAAA,6BAAAI,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAD,wBAAA,YAAAA,CAAAH,CAAA,WAAAA,CAAA,GAAAM,CAAA,GAAAD,CAAA,KAAAL,CAAA;AAAA,SAAAV,wBAAAU,CAAA,EAAAK,CAAA,SAAAA,CAAA,IAAAL,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAE,OAAA,EAAAF,CAAA,QAAAM,CAAA,GAAAH,wBAAA,CAAAE,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAP,CAAA,UAAAM,CAAA,CAAAE,GAAA,CAAAR,CAAA,OAAAS,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAf,CAAA,oBAAAe,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAe,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAd,CAAA,EAAAe,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAf,CAAA,CAAAe,CAAA,YAAAN,CAAA,CAAAP,OAAA,GAAAF,CAAA,EAAAM,CAAA,IAAAA,CAAA,CAAAa,GAAA,CAAAnB,CAAA,EAAAS,CAAA,GAAAA,CAAA;AAAA,SAAAW,SAAA,WAAAA,QAAA,GAAAR,MAAA,CAAAS,MAAA,GAAAT,MAAA,CAAAS,MAAA,CAAAC,IAAA,eAAAb,CAAA,aAAAT,CAAA,MAAAA,CAAA,GAAAuB,SAAA,CAAAC,MAAA,EAAAxB,CAAA,UAAAM,CAAA,GAAAiB,SAAA,CAAAvB,CAAA,YAAAK,CAAA,IAAAC,CAAA,OAAAU,cAAA,CAAAC,IAAA,CAAAX,CAAA,EAAAD,CAAA,MAAAI,CAAA,CAAAJ,CAAA,IAAAC,CAAA,CAAAD,CAAA,aAAAI,CAAA,KAAAW,QAAA,CAAAK,KAAA,OAAAF,SAAA;AAE7D,MAAMG,2BAA2B,GAAG,GAAG;AACvC,MAAMC,WAAW,GAAG,IAAAC,iBAAS,EAAC,CAAC;AAE/B,IAAIC,SAAyB,GAAG,IAAI;AAErB,SAASC,SAASA,CAACC,KAAqB,EAAE;EAAA,IAAAC,qBAAA;EACvD,MAAM;IACJC,gBAAgB;IAChBC,OAAO;IACPC,oBAAoB;IACpBC,YAAY;IACZC,SAAS;IACTC,aAAa;IACbC,UAAU;IACVC,cAAc;IACdC,mBAAmB;IACnBC,OAAO;IACPC,SAAS;IACTC,UAAU;IACVC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC,oBAAoB;IACpBC,cAAc;IACdC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGpB,KAAK;EAET,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAG,IAAAC,eAAQ,EAACrB,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,KAAK,CAAC;EAE3E,MAAMsB,YAAY,GAAG,IAAAC,aAAM,EAAO,IAAI,CAAC;;EAEvC;EACA,MAAMC,sBAAsB,GAAG,IAAAD,aAAM,EAAU,IAAI,CAAC;EACpD,MAAME,qBAAqB,GAAG,IAAAF,aAAM,EAAU,KAAK,CAAC;EACpD,MAAMG,0BAA0B,GAAG,IAAAH,aAAM,EAAU,KAAK,CAAC;EAEzD,MAAMI,iBAAyB,GAAG,IAAAC,cAAO,EACvC,MACE,OAAO3B,OAAO,KAAK,QAAQ,GAAG,IAAA4B,oBAAa,EAAC5B,OAAO,CAAC,GAAIA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAE,EACxE,CAACA,OAAO,CACV,CAAC;EAED,MAAM6B,8BAAsC,GAAG,IAAAF,cAAO,EACpD,MACE,OAAO1B,oBAAoB,KAAK,QAAQ,GACpC,IAAA2B,oBAAa,EAAC3B,oBAAoB,CAAC,GAClCA,oBAAoB,aAApBA,oBAAoB,cAApBA,oBAAoB,GAAI,CAAC,CAAE,EAClC,CAACA,oBAAoB,CACvB,CAAC;EAED,MAAM6B,cAAc,GAAG,IAAAR,aAAM,EAAgB,IAAI,CAAC;EAClD,MAAMS,eAAe,GAAG,IAAAT,aAAM,EAAgB,IAAI,CAAC;EAEnD,MAAMU,YAAY,GAAG,IAAAL,cAAO,EAC1B,MACEM,8BAAO,CAACC,KAAK,CAAC,CAAC,CACZC,gBAAgB,CAAC,IAAI,CAAC,CAAC;EAAA,CACvBC,oBAAoB,CAAC,KAAK,CAAC,CAC3BC,OAAO,CAAEC,KAAK,IAAK;IAClB,IAAIP,eAAe,CAACQ,OAAO,EAAE;MAC3BC,YAAY,CAACT,eAAe,CAACQ,OAAO,CAAC;IACvC;IACA,IAAIrC,YAAY,EAAE;MAChB4B,cAAc,CAACS,OAAO,GAAGE,UAAU,CACjC,MAAMtC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAG,IAAAuC,8BAAuB,EAACJ,KAAK,CAAC,CAAC,EACjDpC,YACF,CAAC;MACD;IACF;IACAC,SAAS,aAATA,SAAS,eAATA,SAAS,CAAG,IAAAuC,8BAAuB,EAACJ,KAAK,CAAC,CAAC;EAC7C,CAAC,CAAC,CACDK,UAAU,CAAEL,KAAK,IAAK;IACrB,IAAIR,cAAc,CAACS,OAAO,EAAE;MAC1BC,YAAY,CAACV,cAAc,CAACS,OAAO,CAAC;IACtC;IACA,IAAInC,aAAa,EAAE;MACjB2B,eAAe,CAACQ,OAAO,GAAGE,UAAU,CAClC,MAAMpC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,IAAAqC,8BAAuB,EAACJ,KAAK,CAAC,CAAC,EAClDlC,aACF,CAAC;MACD;IACF;IACAC,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAG,IAAAqC,8BAAuB,EAACJ,KAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,EACN,CAACpC,YAAY,EAAEE,aAAa,EAAED,SAAS,EAAEE,UAAU,CACrD,CAAC;EAED,MAAMuC,oBAAoB,GAAG,IAAAtB,aAAM,EAAgB,IAAI,CAAC;EACxD,MAAMuB,yBAAyB,GAAG,IAAAvB,aAAM,EAAU,KAAK,CAAC;;EAExD;EACA,MAAMwB,oBAAoB,GAAG,IAAAxB,aAAM,EAAwB,IAAI,CAAC;EAEhE,MAAMyB,cAAc,GAAG,IAAAC,kBAAW,EAC/BV,KAAqB,IAAK;IACzB,IAAIW,qBAAqB,CAACV,OAAO,EAAE;MACjCO,oBAAoB,CAACP,OAAO,GAAGD,KAAK;IACtC;IAEA,IAAI,CAACO,yBAAyB,CAACN,OAAO,EAAE;MACtC;IACF;IAEAO,oBAAoB,CAACP,OAAO,GAAG,IAAI;IAEnC9B,SAAS,aAATA,SAAS,eAATA,SAAS,CAAG6B,KAAK,CAAC;IAClBf,sBAAsB,CAACgB,OAAO,GAAG,IAAI;IACrCK,oBAAoB,CAACL,OAAO,GAAG,IAAI;IACnCpB,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC,EACD,CAACV,SAAS,CACZ,CAAC;EAED,MAAMyC,eAAe,GAAG,IAAAF,kBAAW,EAChCV,KAAqB,IAAK;IACzB,IACE,CAACd,qBAAqB,CAACe,OAAO,IAC9BD,KAAK,CAACa,WAAW,CAACC,OAAO,CAAC9D,MAAM,GAC9BgD,KAAK,CAACa,WAAW,CAACE,cAAc,CAAC/D,MAAM,EACzC;MACA;IACF;IAEA,IAAIiB,mBAAmB,IAAIqC,oBAAoB,CAACL,OAAO,KAAK,IAAI,EAAE;MAChE;MACA;MACA;MACAC,YAAY,CAACI,oBAAoB,CAACL,OAAO,CAAC;MAC1CQ,cAAc,CAACT,KAAK,CAAC;IACvB;IAEA,IAAIQ,oBAAoB,CAACP,OAAO,EAAE;MAChC9B,SAAS,aAATA,SAAS,eAATA,SAAS,CAAGqC,oBAAoB,CAACP,OAAO,CAAC;MACzCO,oBAAoB,CAACP,OAAO,GAAG,IAAI;IACrC;IAEA7B,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAG4B,KAAK,CAAC;IAEnB,IAAIf,sBAAsB,CAACgB,OAAO,EAAE;MAClC/B,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAG8B,KAAK,CAAC;IAClB;IAEA,IAAIgB,mBAAmB,CAACf,OAAO,EAAE;MAC/BC,YAAY,CAACc,mBAAmB,CAACf,OAAO,CAAC;MACzCe,mBAAmB,CAACf,OAAO,GAAG,IAAI;IACpC;IAEAM,yBAAyB,CAACN,OAAO,GAAG,KAAK;IACzCf,qBAAqB,CAACe,OAAO,GAAG,KAAK;IACrChB,sBAAsB,CAACgB,OAAO,GAAG,IAAI;IACrCpB,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC,EACD,CAACX,OAAO,EAAEC,SAAS,EAAEC,UAAU,EAAEqC,cAAc,EAAExC,mBAAmB,CACtE,CAAC;EAED,MAAM0C,qBAAqB,GAAG,IAAA3B,aAAM,EAAU,KAAK,CAAC;EACpD,MAAMiC,wBAAwB,GAAG,IAAAjC,aAAM,EAAsB,IAAI,CAAC;EAClE,MAAMkC,iBAAiB,GAAG,IAAAlC,aAAM,EAAU,KAAK,CAAC;EAEhD,MAAMmC,iBAAiB,GAAG,IAAAT,kBAAW,EAClCV,KAAwB,IAAK;IAC5B,IAAI,CAACO,yBAAyB,CAACN,OAAO,EAAE;MACtC;IACF;IAEA,IAAIf,qBAAqB,CAACe,OAAO,EAAE;MACjC5B,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAG,IAAA+C,mCAA4B,EAACpB,KAAK,CAAC,CAAC;MAClDf,sBAAsB,CAACgB,OAAO,GAAG,KAAK;IACxC;IAEA,IAAIe,mBAAmB,CAACf,OAAO,EAAE;MAC/BC,YAAY,CAACc,mBAAmB,CAACf,OAAO,CAAC;MACzCe,mBAAmB,CAACf,OAAO,GAAG,IAAI;IACpC;EACF,CAAC,EACD,CAAC5B,WAAW,CACd,CAAC;EAED,MAAM2C,mBAAmB,GAAG,IAAAhC,aAAM,EAAgB,IAAI,CAAC;EACvD,MAAMqC,oBAAoB,GACxB,CAACrD,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAId,2BAA2B,KAC7Ce,mBAAmB,aAAnBA,mBAAmB,cAAnBA,mBAAmB,GAAI,CAAC,CAAC;EAE5B,MAAMqD,oBAAoB,GAAG,IAAAjC,cAAO,EAClC,MACEM,8BAAO,CAAC4B,SAAS,CAAC,CAAC,CAChBC,WAAW,CAACC,iBAAS,CAAC,CAAC;EAAA,CACvBC,WAAW,CAACD,iBAAS,CAAC,CAAC;EAAA,CACvB3B,oBAAoB,CAAC,KAAK,CAAC,CAC3B6B,aAAa,CAAE3B,KAAK,IAAK;IAAA,IAAA4B,qBAAA;IACxBjB,qBAAqB,CAACV,OAAO,GAAG,IAAI;IACpC,CAAA2B,qBAAA,GAAA7C,YAAY,CAACkB,OAAO,cAAA2B,qBAAA,eAApBA,qBAAA,CAAsBC,OAAO,CAAC,CAACC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAC,qBAAA;MACvD,IACE,CAAC,IAAAC,yBAAkB,EACjB;QACEH,KAAK;QACLC;MACF,CAAC,EACD7C,iBAAiB,EACjBY,KAAK,CAACe,cAAc,CAACqB,EAAE,CAAC,CAAC,CAAC,CAC5B,CAAC,IACDlD,qBAAqB,CAACe,OAAO,IAC7BiB,iBAAiB,CAACjB,OAAO,EACzB;QACAiB,iBAAiB,CAACjB,OAAO,GAAG,KAAK;QACjCgB,wBAAwB,CAAChB,OAAO,GAAG,IAAI;QACvCU,qBAAqB,CAACV,OAAO,GAAG,KAAK;QACrC;MACF;MAEAf,qBAAqB,CAACe,OAAO,GAAG,IAAI;;MAEpC;MACA,IAAIe,mBAAmB,CAACf,OAAO,KAAK,IAAI,EAAE;QACxC;QACAe,mBAAmB,CAACf,OAAO,GAAGE,UAAU,CACtC,MAAMgB,iBAAiB,CAACnB,KAAK,CAAC,EAC9BqB,oBACF,CAAC;MACH;MAEA,IAAIpD,mBAAmB,EAAE;QACvBqC,oBAAoB,CAACL,OAAO,GAAGE,UAAU,CAAC,MAAM;UAC9CM,cAAc,CAAC,IAAAW,mCAA4B,EAACpB,KAAK,CAAC,CAAC;QACrD,CAAC,EAAE/B,mBAAmB,CAAC;MACzB,CAAC,MAAM;QACLwC,cAAc,CAAC,IAAAW,mCAA4B,EAACpB,KAAK,CAAC,CAAC;MACrD;MAEA,CAAAkC,qBAAA,GAAAjB,wBAAwB,CAAChB,OAAO,cAAAiC,qBAAA,eAAhCA,qBAAA,CAAAzF,IAAA,CAAAwE,wBAAmC,CAAC;MACpCA,wBAAwB,CAAChB,OAAO,GAAG,IAAI;MACvCU,qBAAqB,CAACV,OAAO,GAAG,KAAK;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC,CACDoC,WAAW,CAAErC,KAAK,IAAK;IACtB,IAAIW,qBAAqB,CAACV,OAAO,EAAE;MACjCgB,wBAAwB,CAAChB,OAAO,GAAG,MACjCW,eAAe,CAAC,IAAAQ,mCAA4B,EAACpB,KAAK,CAAC,CAAC;MACtD;IACF;IACA;IACA;IACA,IAAIQ,oBAAoB,CAACP,OAAO,KAAK,IAAI,EAAE;MACzCd,0BAA0B,CAACc,OAAO,GAAG,IAAI;IAC3C;IACAW,eAAe,CAAC,IAAAQ,mCAA4B,EAACpB,KAAK,CAAC,CAAC;EACtD,CAAC,CAAC,CACDsC,kBAAkB,CAAEtC,KAAK,IAAK;IAC7Bf,sBAAsB,CAACgB,OAAO,GAAG,KAAK;IAEtC,IAAIU,qBAAqB,CAACV,OAAO,EAAE;MACjCiB,iBAAiB,CAACjB,OAAO,GAAG,IAAI;MAChCgB,wBAAwB,CAAChB,OAAO,GAAG,MACjCW,eAAe,CAAC,IAAAQ,mCAA4B,EAACpB,KAAK,CAAC,CAAC;MACtD;IACF;IAEA,IACE,CAACd,qBAAqB,CAACe,OAAO,IAC9BD,KAAK,CAACuC,UAAU,CAACvF,MAAM,GAAGgD,KAAK,CAACe,cAAc,CAAC/D,MAAM,EACrD;MACA;IACF;IAEA4D,eAAe,CAAC,IAAAQ,mCAA4B,EAACpB,KAAK,CAAC,CAAC;EACtD,CAAC,CAAC,EACN,CACEmB,iBAAiB,EACjBE,oBAAoB,EACpBjC,iBAAiB,EACjBqB,cAAc,EACdG,eAAe,EACf3C,mBAAmB,CAEvB,CAAC;;EAED;EACA,MAAMuE,aAAa,GAAG,IAAAnD,cAAO,EAC3B,MACEM,8BAAO,CAAC8C,MAAM,CAAC,CAAC,CACb1C,OAAO,CAAC,MAAM;IACb;IACA,IAAI2C,qBAAQ,CAACC,EAAE,KAAK,SAAS,IAAID,qBAAQ,CAACC,EAAE,KAAK,OAAO,EAAE;MACxDpC,yBAAyB,CAACN,OAAO,GAAG,IAAI;IAC1C;EACF,CAAC,CAAC,CACD2C,OAAO,CAAC,MAAM;IACb,IAAIF,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzBpC,yBAAyB,CAACN,OAAO,GAAG,IAAI;IAC1C;;IAEA;IACA,IAAIyC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzB;IACF;IAEA,IAAInC,oBAAoB,CAACP,OAAO,EAAE;MAChCM,yBAAyB,CAACN,OAAO,GAAG,IAAI;MAExC,IAAIf,qBAAqB,CAACe,OAAO,EAAE;QACjCQ,cAAc,CAACD,oBAAoB,CAACP,OAAO,CAAC;QAC5CO,oBAAoB,CAACP,OAAO,GAAG,IAAI;MACrC,CAAC,MAAM;QACLW,eAAe,CAACJ,oBAAoB,CAACP,OAAO,CAAC;QAC7CM,yBAAyB,CAACN,OAAO,GAAG,KAAK;MAC3C;MAEA;IACF;IAEA,IAAIf,qBAAqB,CAACe,OAAO,EAAE;MACjCM,yBAAyB,CAACN,OAAO,GAAG,IAAI;MACxC;IACF;IAEA,IAAId,0BAA0B,CAACc,OAAO,EAAE;MACtCd,0BAA0B,CAACc,OAAO,GAAG,KAAK;MAC1C;IACF;IAEAM,yBAAyB,CAACN,OAAO,GAAG,IAAI;EAC1C,CAAC,CAAC,EACN,CAACQ,cAAc,EAAEG,eAAe,CAClC,CAAC;EAED,MAAMiC,cAAc,GAAG,IAAAC,gBAAS,EAC9B1D,iBAAiB,EACjBG,8BACF,CAAC;EAED,MAAMwD,kBAAkB,GAAGrE,QAAQ,KAAK,IAAI;EAE5C,MAAMsE,QAAQ,GAAG,CAACR,aAAa,EAAElB,oBAAoB,EAAE5B,YAAY,CAAC;EAEpE,KAAK,MAAMuD,OAAO,IAAID,QAAQ,EAAE;IAC9BC,OAAO,CAACC,OAAO,CAACH,kBAAkB,CAAC;IACnCE,OAAO,CAACE,OAAO,CAAC,IAAI,CAAC;IACrBF,OAAO,CAACvF,OAAO,CAACmF,cAAc,CAAC;IAC/BI,OAAO,CAACG,uBAAuB,CAACV,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;EACvE;;EAEA;EACAH,aAAa,CAAC9E,OAAO,CAAC0B,iBAAiB,CAAC;EAExC,MAAM6D,OAAO,GAAGtD,8BAAO,CAAC0D,YAAY,CAAC,GAAGL,QAAQ,CAAC;;EAEjD;EACA,MAAMM,YAAkC,GACtCZ,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG;IAAEY,MAAM,EAAE;EAAU,CAAC,GAAG,CAAC,CAAC;EAEpD,MAAMC,SAAS,GACb,OAAOlF,KAAK,KAAK,UAAU,GAAGA,KAAK,CAAC;IAAEmF,OAAO,EAAE7E;EAAa,CAAC,CAAC,GAAGN,KAAK;EAExE,MAAMoF,YAAY,GAChB,OAAOnF,QAAQ,KAAK,UAAU,GAC1BA,QAAQ,CAAC;IAAEkF,OAAO,EAAE7E;EAAa,CAAC,CAAC,GACnCL,QAAQ;EAEd,MAAMoF,WAAW,GAAG,IAAAtE,cAAO,EAAC,MAAM;IAAA,IAAAuE,qBAAA;IAChC,IAAIvG,SAAS,KAAK,IAAI,EAAE;MACtBA,SAAS,GAAG,IAAAwG,gBAAQ,EAAC,CAAC;IACxB;IAEA,MAAMC,kBAAkB,GAAGrF,cAAc,GAAGsF,SAAS,GAAG,aAAa;IACrE,MAAMC,sBAAsB,IAAAJ,qBAAA,GAAGnF,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEwF,KAAK,cAAAL,qBAAA,cAAAA,qBAAA,GAAIE,kBAAkB;IAC1E,OAAOzG,SAAS,GACZ2G,sBAAsB,GACtB,IAAAE,yBAAY,EAACF,sBAAsB,CAAC;EAC1C,CAAC,EAAE,CAACvF,cAAc,CAAC,CAAC;EAEpB,oBACE5D,MAAA,CAAAa,OAAA,CAAAyI,aAAA,CAAClJ,gBAAA,CAAAmJ,eAAe;IAACnB,OAAO,EAAEA;EAAQ,gBAChCpI,MAAA,CAAAa,OAAA,CAAAyI,aAAA,CAAChJ,qBAAA,CAAAO,OAAY,EAAAkB,QAAA,KACP+B,cAAc;IAClB0F,GAAG,EAAEtF,YAAa;IAClBrB,OAAO,EAAEmF,cAAe;IACxBK,OAAO,EAAEH,kBAAmB;IAC5BuB,kBAAkB,EAAE9F,oBAAoB,aAApBA,oBAAoB,cAApBA,oBAAoB,GAAIuF,SAAU;IACtDJ,WAAW,EAAEA,WAAY;IACzBY,YAAY,GAAA/G,qBAAA,GAAEiB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE+F,MAAM,cAAAhH,qBAAA,cAAAA,qBAAA,GAAIuG,SAAU;IAClDzF,KAAK,EAAE,CAACgF,YAAY,EAAEE,SAAS,CAAE;IACjCiB,gBAAgB,EAAEtH,WAAW,GAAGe,OAAO,GAAG6F,SAAU;IACpDW,kBAAkB,EAAEvH,WAAW,GAAGgB,SAAS,GAAG4F,SAAU;IACxDY,mBAAmB,EAAExH,WAAW,GAAGiB,UAAU,GAAG2F,SAAU;IAC1Da,oBAAoB,EAAEzH,WAAW,GAAGkB,WAAW,GAAG0F;EAAU,IAC3DL,YAAY,EACZmB,OAAO,gBACNhK,MAAA,CAAAa,OAAA,CAAAyI,aAAA,CAAC7I,sBAAA,CAAAwJ,qBAAqB;IAACb,KAAK,EAAC,KAAK;IAACvG,OAAO,EAAE0B;EAAkB,CAAE,CAAC,GAC/D,IACQ,CACC,CAAC;AAEtB","ignoreList":[]}