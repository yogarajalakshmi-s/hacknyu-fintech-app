{"version":3,"names":["_react","_interopRequireWildcard","require","_gestureObjects","_GestureDetector","_reactNativeReanimated","_reactNative","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","DRAG_TOSS","SwipeDirection","Swipeable","forwardRef","props","ref","defaultProps","friction","overshootFriction","dragOffset","enableTrackpadTwoFingerGesture","leftThreshold","rightThreshold","enabled","containerStyle","childrenContainerStyle","animationOptions","overshootLeft","overshootRight","testID","children","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","onSwipeableWillOpen","onSwipeableWillClose","onSwipeableOpen","onSwipeableClose","renderLeftActions","renderRightActions","simultaneousWithExternalGesture","remainingProps","rowState","useSharedValue","userDrag","appliedTranslation","rowWidth","leftWidth","rightWidth","showLeftProgress","showRightProgress","updateAnimatedEvent","useCallback","shouldOvershootLeft","value","shouldOvershootRight","startOffset","offsetDrag","interpolate","dispatchImmediateEvents","fromValue","toValue","runOnJS","RIGHT","LEFT","dispatchEndEvents","animateRow","velocityX","translationSpringConfig","mass","damping","stiffness","velocity","overshootClamping","reduceMotion","ReduceMotion","System","isClosing","moveToRight","usedWidth","progressSpringConfig","restDisplacementThreshold","restSpeedThreshold","frozenRowState","withSpring","isFinished","progressTarget","Math","sign","max","leftLayoutRef","useAnimatedRef","leftWrapperLayoutRef","rightLayoutRef","updateElementWidths","_leftLayout$pageX","_leftWrapperLayout$pa","_rightLayout$pageX","_leftWrapperLayout$pa2","leftLayout","measure","leftWrapperLayout","rightLayout","pageX","swipeableMethods","useMemo","close","_WORKLET","runOnUI","openLeft","openRight","reset","onRowLayout","nativeEvent","layout","width","leftActionAnimation","useAnimatedStyle","opacity","leftElement","createElement","View","style","styles","leftActions","rightActionAnimation","rightElement","rightActions","handleRelease","event","translationX","leftThresholdProp","rightThresholdProp","dragStarted","tapGesture","tap","Gesture","Tap","shouldCancelWhenOutside","onStart","Array","isArray","panGesture","pan","Pan","activeOffsetX","onUpdate","direction","onEnd","onFinalize","useImperativeHandle","animatedStyle","transform","translateX","pointerEvents","swipeableComponent","GestureDetector","gesture","touchAction","onLayout","container","_default","exports","StyleSheet","create","overflow","absoluteFillObject","flexDirection","I18nManager","isRTL"],"sources":["ReanimatedSwipeable.tsx"],"sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { GestureRef } from '../handlers/gestures/gesture';\nimport { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../handlers/gestures/GestureDetector';\nimport {\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../handlers/gestureHandlerCommon';\nimport type { PanGestureHandlerProps } from '../handlers/PanGestureHandler';\nimport type { PanGestureHandlerEventPayload } from '../handlers/GestureHandlerEventPayload';\nimport Animated, {\n  ReduceMotion,\n  SharedValue,\n  interpolate,\n  measure,\n  runOnJS,\n  runOnUI,\n  useAnimatedRef,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\nimport {\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nenum SwipeDirection {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Distance that the panel must be dragged from the left edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromLeftEdge?: number;\n\n  /**\n   * Distance that the panel must be dragged from the right edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromRightEdge?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to open.\n   */\n  onSwipeableOpenStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to close.\n   */\n  onSwipeableCloseStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * A gesture object or an array of gesture objects containing the configuration and callbacks to be\n   * used with the swipeable's gesture handler.\n   */\n  simultaneousWithExternalGesture?:\n    | Exclude<GestureRef, number>\n    | Exclude<GestureRef, number>[];\n}\n\nexport interface SwipeableMethods {\n  close: () => void;\n  openLeft: () => void;\n  openRight: () => void;\n  reset: () => void;\n}\n\nconst Swipeable = forwardRef<SwipeableMethods, SwipeableProps>(\n  function Swipeable(\n    props: SwipeableProps,\n    ref: ForwardedRef<SwipeableMethods>\n  ) {\n    const defaultProps = {\n      friction: 1,\n      overshootFriction: 1,\n      dragOffset: 10,\n      enableTrackpadTwoFingerGesture: false,\n    };\n\n    const {\n      leftThreshold,\n      rightThreshold,\n      enabled,\n      containerStyle,\n      childrenContainerStyle,\n      animationOptions,\n      overshootLeft,\n      overshootRight,\n      testID,\n      children,\n      enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,\n      dragOffsetFromLeftEdge = defaultProps.dragOffset,\n      dragOffsetFromRightEdge = defaultProps.dragOffset,\n      friction = defaultProps.friction,\n      overshootFriction = defaultProps.overshootFriction,\n      onSwipeableOpenStartDrag,\n      onSwipeableCloseStartDrag,\n      onSwipeableWillOpen,\n      onSwipeableWillClose,\n      onSwipeableOpen,\n      onSwipeableClose,\n      renderLeftActions,\n      renderRightActions,\n      simultaneousWithExternalGesture,\n      ...remainingProps\n    } = props;\n\n    const rowState = useSharedValue<number>(0);\n\n    const userDrag = useSharedValue<number>(0);\n\n    const appliedTranslation = useSharedValue<number>(0);\n\n    const rowWidth = useSharedValue<number>(0);\n    const leftWidth = useSharedValue<number>(0);\n    const rightWidth = useSharedValue<number>(0);\n\n    const showLeftProgress = useSharedValue<number>(0);\n    const showRightProgress = useSharedValue<number>(0);\n\n    const updateAnimatedEvent = useCallback(() => {\n      'worklet';\n\n      const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;\n      const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;\n\n      const startOffset =\n        rowState.value === 1\n          ? leftWidth.value\n          : rowState.value === -1\n            ? -rightWidth.value\n            : 0;\n\n      const offsetDrag = userDrag.value / friction + startOffset;\n\n      appliedTranslation.value = interpolate(\n        offsetDrag,\n        [\n          -rightWidth.value - 1,\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + 1,\n        ],\n        [\n          -rightWidth.value -\n            (shouldOvershootRight ? 1 / overshootFriction : 0),\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0),\n        ]\n      );\n\n      showLeftProgress.value =\n        leftWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-1, 0, leftWidth.value],\n              [0, 0, 1]\n            )\n          : 0;\n\n      showRightProgress.value =\n        rightWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-rightWidth.value, 0, 1],\n              [1, 0, 0]\n            )\n          : 0;\n    }, [\n      appliedTranslation,\n      friction,\n      leftWidth,\n      overshootFriction,\n      rightWidth,\n      rowState,\n      showLeftProgress,\n      showRightProgress,\n      userDrag,\n      overshootLeft,\n      overshootRight,\n    ]);\n\n    const dispatchImmediateEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableWillClose) {\n          runOnJS(onSwipeableWillClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableWillClose, onSwipeableWillOpen]\n    );\n\n    const dispatchEndEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableClose) {\n          runOnJS(onSwipeableClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableClose, onSwipeableOpen]\n    );\n\n    const animateRow: (toValue: number, velocityX?: number) => void =\n      useCallback(\n        (toValue: number, velocityX?: number) => {\n          'worklet';\n\n          const translationSpringConfig = {\n            mass: 2,\n            damping: 1000,\n            stiffness: 700,\n            velocity: velocityX,\n            overshootClamping: true,\n            reduceMotion: ReduceMotion.System,\n            ...animationOptions,\n          };\n\n          const isClosing = toValue === 0;\n          const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;\n\n          const usedWidth = isClosing\n            ? moveToRight\n              ? rightWidth.value\n              : leftWidth.value\n            : moveToRight\n              ? leftWidth.value\n              : rightWidth.value;\n\n          const progressSpringConfig = {\n            ...translationSpringConfig,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 0.01,\n            velocity:\n              velocityX &&\n              interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1]),\n          };\n\n          const frozenRowState = rowState.value;\n\n          appliedTranslation.value = withSpring(\n            toValue,\n            translationSpringConfig,\n            (isFinished) => {\n              if (isFinished) {\n                dispatchEndEvents(frozenRowState, toValue);\n              }\n            }\n          );\n\n          const progressTarget = toValue === 0 ? 0 : 1 * Math.sign(toValue);\n\n          showLeftProgress.value = withSpring(\n            Math.max(progressTarget, 0),\n            progressSpringConfig\n          );\n\n          showRightProgress.value = withSpring(\n            Math.max(-progressTarget, 0),\n            progressSpringConfig\n          );\n\n          dispatchImmediateEvents(frozenRowState, toValue);\n\n          rowState.value = Math.sign(toValue);\n        },\n        [\n          rowState,\n          animationOptions,\n          appliedTranslation,\n          showLeftProgress,\n          leftWidth,\n          showRightProgress,\n          rightWidth,\n          dispatchImmediateEvents,\n          dispatchEndEvents,\n        ]\n      );\n\n    const leftLayoutRef = useAnimatedRef();\n    const leftWrapperLayoutRef = useAnimatedRef();\n    const rightLayoutRef = useAnimatedRef();\n\n    const updateElementWidths = useCallback(() => {\n      'worklet';\n      const leftLayout = measure(leftLayoutRef);\n      const leftWrapperLayout = measure(leftWrapperLayoutRef);\n      const rightLayout = measure(rightLayoutRef);\n      leftWidth.value =\n        (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);\n\n      rightWidth.value =\n        rowWidth.value -\n        (rightLayout?.pageX ?? rowWidth.value) +\n        (leftWrapperLayout?.pageX ?? 0);\n    }, [\n      leftLayoutRef,\n      leftWrapperLayoutRef,\n      rightLayoutRef,\n      leftWidth,\n      rightWidth,\n      rowWidth,\n    ]);\n\n    const swipeableMethods = useMemo<SwipeableMethods>(\n      () => ({\n        close() {\n          'worklet';\n          if (_WORKLET) {\n            animateRow(0);\n            return;\n          }\n          runOnUI(() => {\n            animateRow(0);\n          })();\n        },\n        openLeft() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n          })();\n        },\n        openRight() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n          })();\n        },\n        reset() {\n          'worklet';\n          userDrag.value = 0;\n          showLeftProgress.value = 0;\n          appliedTranslation.value = 0;\n          rowState.value = 0;\n        },\n      }),\n      [\n        animateRow,\n        updateElementWidths,\n        leftWidth,\n        rightWidth,\n        userDrag,\n        showLeftProgress,\n        appliedTranslation,\n        rowState,\n      ]\n    );\n\n    const onRowLayout = useCallback(\n      ({ nativeEvent }: LayoutChangeEvent) => {\n        rowWidth.value = nativeEvent.layout.width;\n      },\n      [rowWidth]\n    );\n\n    // As stated in `Dimensions.get` docstring, this function should be called on every render\n    // since dimensions may change (e.g. orientation change)\n\n    const leftActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showLeftProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const leftElement = useCallback(\n      () => (\n        <Animated.View\n          ref={leftWrapperLayoutRef}\n          style={[styles.leftActions, leftActionAnimation]}>\n          {renderLeftActions?.(\n            showLeftProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={leftLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        leftActionAnimation,\n        leftLayoutRef,\n        leftWrapperLayoutRef,\n        renderLeftActions,\n        showLeftProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const rightActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showRightProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const rightElement = useCallback(\n      () => (\n        <Animated.View style={[styles.rightActions, rightActionAnimation]}>\n          {renderRightActions?.(\n            showRightProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={rightLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        renderRightActions,\n        rightActionAnimation,\n        rightLayoutRef,\n        showRightProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const handleRelease = useCallback(\n      (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n        'worklet';\n        const { velocityX } = event;\n        userDrag.value = event.translationX;\n\n        const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;\n        const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;\n\n        const translationX =\n          (userDrag.value + DRAG_TOSS * velocityX) / friction;\n\n        let toValue = 0;\n\n        if (rowState.value === 0) {\n          if (translationX > leftThresholdProp) {\n            toValue = leftWidth.value;\n          } else if (translationX < -rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        } else if (rowState.value === 1) {\n          // Swiped to left\n          if (translationX > -leftThresholdProp) {\n            toValue = leftWidth.value;\n          }\n        } else {\n          // Swiped to right\n          if (translationX < rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        }\n\n        animateRow(toValue, velocityX / friction);\n      },\n      [\n        animateRow,\n        friction,\n        leftThreshold,\n        leftWidth,\n        rightThreshold,\n        rightWidth,\n        rowState,\n        userDrag,\n      ]\n    );\n\n    const close = useCallback(() => {\n      'worklet';\n      animateRow(0);\n    }, [animateRow]);\n\n    const dragStarted = useSharedValue<boolean>(false);\n\n    const tapGesture = useMemo(() => {\n      const tap = Gesture.Tap()\n        .shouldCancelWhenOutside(true)\n        .onStart(() => {\n          if (rowState.value !== 0) {\n            close();\n          }\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return tap;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return tap;\n    }, [close, rowState, simultaneousWithExternalGesture]);\n\n    const panGesture = useMemo(() => {\n      const pan = Gesture.Pan()\n        .enabled(enabled !== false)\n        .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)\n        .activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge])\n        .onStart(updateElementWidths)\n        .onUpdate(\n          (event: GestureUpdateEvent<PanGestureHandlerEventPayload>) => {\n            userDrag.value = event.translationX;\n\n            const direction =\n              rowState.value === -1\n                ? SwipeDirection.RIGHT\n                : rowState.value === 1\n                  ? SwipeDirection.LEFT\n                  : event.translationX > 0\n                    ? SwipeDirection.RIGHT\n                    : SwipeDirection.LEFT;\n\n            if (!dragStarted.value) {\n              dragStarted.value = true;\n              if (rowState.value === 0 && onSwipeableOpenStartDrag) {\n                runOnJS(onSwipeableOpenStartDrag)(direction);\n              } else if (onSwipeableCloseStartDrag) {\n                runOnJS(onSwipeableCloseStartDrag)(direction);\n              }\n            }\n\n            updateAnimatedEvent();\n          }\n        )\n        .onEnd(\n          (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n            handleRelease(event);\n          }\n        )\n        .onFinalize(() => {\n          dragStarted.value = false;\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return pan;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return pan;\n    }, [\n      dragOffsetFromLeftEdge,\n      dragOffsetFromRightEdge,\n      dragStarted,\n      enableTrackpadTwoFingerGesture,\n      enabled,\n      handleRelease,\n      onSwipeableCloseStartDrag,\n      onSwipeableOpenStartDrag,\n      rowState,\n      updateAnimatedEvent,\n      updateElementWidths,\n      userDrag,\n      simultaneousWithExternalGesture,\n    ]);\n\n    useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);\n\n    const animatedStyle = useAnimatedStyle(\n      () => ({\n        transform: [{ translateX: appliedTranslation.value }],\n        pointerEvents: rowState.value === 0 ? 'auto' : 'box-only',\n      }),\n      [appliedTranslation, rowState]\n    );\n\n    const swipeableComponent = (\n      <GestureDetector gesture={panGesture} touchAction=\"pan-y\">\n        <Animated.View\n          {...remainingProps}\n          onLayout={onRowLayout}\n          style={[styles.container, containerStyle]}>\n          {leftElement()}\n          {rightElement()}\n          <GestureDetector gesture={tapGesture} touchAction=\"pan-y\">\n            <Animated.View style={[animatedStyle, childrenContainerStyle]}>\n              {children}\n            </Animated.View>\n          </GestureDetector>\n        </Animated.View>\n      </GestureDetector>\n    );\n\n    return testID ? (\n      <View testID={testID}>{swipeableComponent}</View>\n    ) : (\n      swipeableComponent\n    );\n  }\n);\n\nexport default Swipeable;\nexport type SwipeableRef = ForwardedRef<SwipeableMethods>;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n    overflow: 'hidden',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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","ignoreList":[]}