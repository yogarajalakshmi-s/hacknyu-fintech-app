{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_State","_constants","_DiscreteGestureHandler","_utils","e","__esModule","default","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","PressGestureHandler","DiscreteGestureHandler","constructor","args","name","minDurationMs","isnan","config","maxDist","NativeGestureClass","Hammer","Press","simulateCancelEvent","inputData","hasGestureFailed","cancelEvent","updateHasCustomActivationCriteria","shouldCancelWhenOutside","maxDistSq","isValidNumber","getState","type","INPUT_START","State","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","getConfig","hasCustomActivationCriteria","getHammerConfig","time","onGestureActivated","ev","onGestureStart","shouldDelayTouchForEvent","pointerType","shouldDelayTouches","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","fireAfterInterval","sendGestureStartedEvent","CONTENT_TOUCHES_DELAY","sendEvent","eventType","isFirst","forceInvalidate","event","onRawEvent","isFinal","timeout","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","onGestureEnded","updateGestureConfig","shouldActivateOnStart","disallowInterruption","NaN","minPointers","maxPointers","props","_default","exports"],"sources":["PressGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n  HammerInputNames,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { Config, HammerInputExt } from './GestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  private visualFeedbackTimer: any;\n  private initialEvent: HammerInputExt | null = null;\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    // @ts-ignore FIXME(TS)\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq,\n  }: Config & { shouldCancelWhenOutside: boolean }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type: keyof typeof HammerInputNames): State {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }: HammerInputExt) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev: HammerInputExt) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(\n      () => {\n        this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n        this.initialEvent = null;\n      },\n      this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY\n    );\n  }\n\n  sendGestureStartedEvent(ev: HammerInputExt) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event: HammerInputExt) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          // Aesthetic timing for a quick tap.\n          // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n          // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n          });\n          // @ts-ignore -- this should explicitly support undefined\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false,\n        });\n      }\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"],"mappings":"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","ignoreList":[]}