{"version":3,"names":["gestures","exports","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes"],"sources":["NodeManager.ts"],"sourcesContent":["export const gestures: Record<number, any> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(handlerTag: number, handler: any) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":";;;;;;;;;;AAAO,MAAMA,QAA6B,GAAAC,OAAA,CAAAD,QAAA,GAAG,CAAC,CAAC;AAExC,SAASE,UAAUA,CAACC,GAAW,EAAE;EACtC,IAAIA,GAAG,IAAIH,QAAQ,EAAE;IACnB,OAAOA,QAAQ,CAACG,GAAG,CAAC;EACtB;EAEA,MAAM,IAAIC,KAAK,CAAC,sBAAsBD,GAAG,EAAE,CAAC;AAC9C;AAEO,SAASE,oBAAoBA,CAACC,UAAkB,EAAEC,OAAY,EAAE;EACrE,IAAID,UAAU,IAAIN,QAAQ,EAAE;IAC1B,MAAM,IAAII,KAAK,CAAC,oBAAoBE,UAAU,iBAAiB,CAAC;EAClE;EACAN,QAAQ,CAACM,UAAU,CAAC,GAAGC,OAAO;EAC9B;EACAP,QAAQ,CAACM,UAAU,CAAC,CAACA,UAAU,GAAGA,UAAU;AAC9C;AAEO,SAASE,kBAAkBA,CAACF,UAAkB,EAAE;EACrD;EACA;EACA,IAAI,EAAEA,UAAU,IAAIN,QAAQ,CAAC,EAAE;IAC7B;EACF;EACAE,UAAU,CAACI,UAAU,CAAC,CAACG,OAAO,CAAC,CAAC;EAChC;EACA,OAAOT,QAAQ,CAACM,UAAU,CAAC;AAC7B;AAEO,SAASI,QAAQA,CAAA,EAAG;EACzB,OAAO;IAAE,GAAGV;EAAS,CAAC;AACxB","ignoreList":[]}