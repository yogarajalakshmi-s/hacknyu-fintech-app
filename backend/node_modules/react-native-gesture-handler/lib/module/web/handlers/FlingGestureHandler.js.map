{"version":3,"names":["State","DiagonalDirections","Directions","GestureHandler","Vector","coneToDeviation","DEFAULT_MAX_DURATION_MS","DEFAULT_MIN_VELOCITY","DEFAULT_ALIGNMENT_CONE","DEFAULT_DIRECTION","RIGHT","DEFAULT_NUMBER_OF_TOUCHES_REQUIRED","AXIAL_DEVIATION_COSINE","DIAGONAL_DEVIATION_COSINE","FlingGestureHandler","constructor","args","_defineProperty","NaN","updateGestureConfig","enabled","props","config","direction","numberOfPointers","numberOfPointersRequired","startFling","begin","maxNumberOfPointersSimultaneously","delayTimeout","setTimeout","fail","maxDurationMs","tryEndFling","velocityVector","fromVelocity","tracker","keyPointer","getAlignment","minimalAlignmentCosine","isSimilar","fromDirection","axialDirectionsList","Object","values","diagonalDirectionsList","axialAlignmentList","map","diagonalAlignmentList","isAligned","some","Boolean","isFast","magnitude","minVelocity","clearTimeout","activate","endFling","onPointerDown","event","isButtonInConfig","button","addToTracker","pointerId","newPointerAction","tryToSendTouchEvent","onPointerAdd","state","UNDETERMINED","BEGAN","trackedPointersCount","pointerMoveAction","track","onPointerMove","onPointerOutOfBounds","onPointerUp","onUp","onPointerRemove","removeFromTracker","force","end","resetConfig"],"sources":["FlingGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport Vector from '../tools/Vector';\nimport { coneToDeviation } from '../utils';\n\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_VELOCITY = 700;\nconst DEFAULT_ALIGNMENT_CONE = 30;\nconst DEFAULT_DIRECTION = Directions.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nconst AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nconst DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\n\nexport default class FlingGestureHandler extends GestureHandler {\n  private numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n  private direction: Directions = DEFAULT_DIRECTION;\n\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private minVelocity = DEFAULT_MIN_VELOCITY;\n  private delayTimeout!: number;\n\n  private maxNumberOfPointersSimultaneously = 0;\n  private keyPointer = NaN;\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n\n  private startFling(): void {\n    this.begin();\n\n    this.maxNumberOfPointersSimultaneously = 1;\n\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private tryEndFling(): boolean {\n    const velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n\n    const getAlignment = (\n      direction: Directions | DiagonalDirections,\n      minimalAlignmentCosine: number\n    ) => {\n      return (\n        (direction & this.direction) === direction &&\n        velocityVector.isSimilar(\n          Vector.fromDirection(direction),\n          minimalAlignmentCosine\n        )\n      );\n    };\n\n    const axialDirectionsList = Object.values(Directions);\n    const diagonalDirectionsList = Object.values(DiagonalDirections);\n\n    // List of alignments to all activated directions\n    const axialAlignmentList = axialDirectionsList.map((direction) =>\n      getAlignment(direction, AXIAL_DEVIATION_COSINE)\n    );\n\n    const diagonalAlignmentList = diagonalDirectionsList.map((direction) =>\n      getAlignment(direction, DIAGONAL_DEVIATION_COSINE)\n    );\n\n    const isAligned =\n      axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n\n    const isFast = velocityVector.magnitude > this.minVelocity;\n\n    if (\n      this.maxNumberOfPointersSimultaneously ===\n        this.numberOfPointersRequired &&\n      isAligned &&\n      isFast\n    ) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    if (this.state === State.UNDETERMINED) {\n      this.startFling();\n    }\n\n    if (this.state !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    if (\n      this.tracker.trackedPointersCount > this.maxNumberOfPointersSimultaneously\n    ) {\n      this.maxNumberOfPointersSimultaneously =\n        this.tracker.trackedPointersCount;\n    }\n  }\n\n  private pointerMoveAction(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    if (this.state !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n\n    this.keyPointer = NaN;\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    if (this.state === State.BEGAN) {\n      this.endFling();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  public activate(force?: boolean): void {\n    super.activate(force);\n    this.end();\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}\n"],"mappings":"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","ignoreList":[]}