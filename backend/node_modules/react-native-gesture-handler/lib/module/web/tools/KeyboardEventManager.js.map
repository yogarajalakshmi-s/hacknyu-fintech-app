{"version":3,"names":["EventTypes","EventManager","PointerType","KeyboardEventManager","constructor","args","_defineProperty","event","cancelationKeys","indexOf","key","isPressed","dispatchEvent","CANCEL","activationKeys","DOWN","UP","eventType","target","HTMLElement","adaptedEvent","mapEvent","onPointerUp","onPointerDown","onPointerCancel","registerListeners","view","addEventListener","keyDownCallback","keyUpCallback","unregisterListeners","removeEventListener","viewRect","getBoundingClientRect","viewportPosition","x","width","y","height","relativePosition","offsetX","offsetY","pointerId","pointerType","KEY","time","timeStamp"],"sources":["KeyboardEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes } from '../interfaces';\nimport EventManager from './EventManager';\nimport { PointerType } from '../../PointerType';\n\nexport default class KeyboardEventManager extends EventManager<HTMLElement> {\n  private activationKeys = ['Enter', ' '];\n  private cancelationKeys = ['Tab'];\n  private isPressed = false;\n\n  private keyDownCallback = (event: KeyboardEvent): void => {\n    if (this.cancelationKeys.indexOf(event.key) !== -1 && this.isPressed) {\n      this.dispatchEvent(event, EventTypes.CANCEL);\n      return;\n    }\n\n    if (this.activationKeys.indexOf(event.key) === -1) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.DOWN);\n  };\n\n  private keyUpCallback = (event: KeyboardEvent): void => {\n    if (this.activationKeys.indexOf(event.key) === -1 || !this.isPressed) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.UP);\n  };\n\n  private dispatchEvent(event: KeyboardEvent, eventType: EventTypes) {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const adaptedEvent = this.mapEvent(event, eventType);\n\n    switch (eventType) {\n      case EventTypes.UP:\n        this.isPressed = false;\n        this.onPointerUp(adaptedEvent);\n        break;\n      case EventTypes.DOWN:\n        this.isPressed = true;\n        this.onPointerDown(adaptedEvent);\n        break;\n      case EventTypes.CANCEL:\n        this.isPressed = false;\n        this.onPointerCancel(adaptedEvent);\n        break;\n    }\n  }\n\n  public registerListeners(): void {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('keydown', this.keyDownCallback);\n    this.view.removeEventListener('keyup', this.keyUpCallback);\n  }\n\n  protected mapEvent(\n    event: KeyboardEvent,\n    eventType: EventTypes\n  ): AdaptedEvent {\n    const viewRect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const viewportPosition = {\n      x: viewRect?.x + viewRect?.width / 2,\n      y: viewRect?.y + viewRect?.height / 2,\n    };\n\n    const relativePosition = {\n      x: viewRect?.width / 2,\n      y: viewRect?.height / 2,\n    };\n\n    return {\n      x: viewportPosition.x,\n      y: viewportPosition.y,\n      offsetX: relativePosition.x,\n      offsetY: relativePosition.y,\n      pointerId: 0,\n      eventType: eventType,\n      pointerType: PointerType.KEY,\n      time: event.timeStamp,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}