{"version":3,"names":["VelocityTracker","MAX_POINTERS","PointerTracker","constructor","_defineProperty","Map","x","y","lastMovedPointerId","NaN","i","touchEventsIds","set","addToTracker","event","trackedPointers","has","pointerId","newElement","abosoluteCoords","relativeCoords","offsetX","offsetY","timestamp","time","velocityX","velocityY","mapTouchEventId","cachedAbsoluteAverages","getAbsoluteCoordsAverage","cachedRelativeAverages","getRelativeCoordsAverage","removeFromTracker","delete","removeMappedTouchId","track","element","get","velocityTracker","add","velocity","id","mappedId","touchId","isNaN","getMappedTouchEventId","touchEventId","key","value","entries","getVelocity","_this$trackedPointers","_this$trackedPointers2","getLastAbsoluteCoords","_this$trackedPointers3","getLastRelativeCoords","_this$trackedPointers4","coordsSum","getAbsoluteCoordsSum","avgX","size","avgY","averages","getRelativeCoordsSum","ignoredPointer","sum","forEach","resetTracker","reset","clear","shareCommonPointers","stPointers","ndPointers","some","includes","trackedPointersCount","trackedPointersIDs","keys","_value","push","_trackedPointers"],"sources":["PointerTracker.ts"],"sourcesContent":["import { AdaptedEvent, Point } from '../interfaces';\nimport VelocityTracker from './VelocityTracker';\n\nexport interface TrackerElement {\n  abosoluteCoords: Point;\n  relativeCoords: Point;\n  timestamp: number;\n  velocityX: number;\n  velocityY: number;\n}\n\nconst MAX_POINTERS = 20;\n\nexport default class PointerTracker {\n  private velocityTracker = new VelocityTracker();\n  private readonly _trackedPointers: Map<number, TrackerElement> = new Map<\n    number,\n    TrackerElement\n  >();\n\n  private touchEventsIds: Map<number, number> = new Map<number, number>();\n\n  private lastMovedPointerId: number;\n\n  private cachedAbsoluteAverages: Point = { x: 0, y: 0 };\n  private cachedRelativeAverages: Point = { x: 0, y: 0 };\n\n  public constructor() {\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public addToTracker(event: AdaptedEvent): void {\n    if (this.trackedPointers.has(event.pointerId)) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    const newElement: TrackerElement = {\n      abosoluteCoords: { x: event.x, y: event.y },\n      relativeCoords: { x: event.offsetX, y: event.offsetY },\n      timestamp: event.time,\n      velocityX: 0,\n      velocityY: 0,\n    };\n\n    this.trackedPointers.set(event.pointerId, newElement);\n    this.mapTouchEventId(event.pointerId);\n\n    this.cachedAbsoluteAverages = this.getAbsoluteCoordsAverage();\n    this.cachedRelativeAverages = this.getRelativeCoordsAverage();\n  }\n\n  public removeFromTracker(pointerId: number): void {\n    this.trackedPointers.delete(pointerId);\n    this.removeMappedTouchId(pointerId);\n  }\n\n  public track(event: AdaptedEvent): void {\n    const element: TrackerElement = this.trackedPointers.get(\n      event.pointerId\n    ) as TrackerElement;\n\n    if (!element) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    this.velocityTracker.add(event);\n    const [velocityX, velocityY] = this.velocityTracker.velocity;\n\n    element.velocityX = velocityX;\n    element.velocityY = velocityY;\n\n    element.abosoluteCoords = { x: event.x, y: event.y };\n    element.relativeCoords = { x: event.offsetX, y: event.offsetY };\n\n    this.trackedPointers.set(event.pointerId, element);\n\n    this.cachedAbsoluteAverages = this.getAbsoluteCoordsAverage();\n    this.cachedRelativeAverages = this.getRelativeCoordsAverage();\n  }\n\n  // Mapping TouchEvents ID\n  private mapTouchEventId(id: number): void {\n    for (const [mappedId, touchId] of this.touchEventsIds) {\n      if (isNaN(touchId)) {\n        this.touchEventsIds.set(mappedId, id);\n        break;\n      }\n    }\n  }\n\n  private removeMappedTouchId(id: number): void {\n    const mappedId: number = this.getMappedTouchEventId(id);\n    if (!isNaN(mappedId)) {\n      this.touchEventsIds.set(mappedId, NaN);\n    }\n  }\n\n  public getMappedTouchEventId(touchEventId: number): number {\n    for (const [key, value] of this.touchEventsIds.entries()) {\n      if (value === touchEventId) {\n        return key;\n      }\n    }\n\n    return NaN;\n  }\n\n  public getVelocity(pointerId: number) {\n    return {\n      x: this.trackedPointers.get(pointerId)?.velocityX as number,\n      y: this.trackedPointers.get(pointerId)?.velocityY as number,\n    };\n  }\n\n  public getLastAbsoluteCoords(pointerId?: number) {\n    return this.trackedPointers.get(pointerId ?? this.lastMovedPointerId)\n      ?.abosoluteCoords as Point;\n  }\n\n  public getLastRelativeCoords(pointerId?: number) {\n    return this.trackedPointers.get(pointerId ?? this.lastMovedPointerId)\n      ?.relativeCoords as Point;\n  }\n\n  // Some handlers use these methods to send average values in native event.\n  // This may happen when pointers have already been removed from tracker (i.e. pointerup event).\n  // In situation when NaN would be sent as a response, we return cached value.\n  // That prevents handlers from crashing\n\n  public getAbsoluteCoordsAverage() {\n    const coordsSum = this.getAbsoluteCoordsSum();\n\n    const avgX = coordsSum.x / this.trackedPointers.size;\n    const avgY = coordsSum.y / this.trackedPointers.size;\n\n    const averages = {\n      x: isNaN(avgX) ? this.cachedAbsoluteAverages.x : avgX,\n      y: isNaN(avgY) ? this.cachedAbsoluteAverages.y : avgY,\n    };\n\n    return averages;\n  }\n\n  public getRelativeCoordsAverage() {\n    const coordsSum = this.getRelativeCoordsSum();\n\n    const avgX = coordsSum.x / this.trackedPointers.size;\n    const avgY = coordsSum.y / this.trackedPointers.size;\n\n    const averages = {\n      x: isNaN(avgX) ? this.cachedRelativeAverages.x : avgX,\n      y: isNaN(avgY) ? this.cachedRelativeAverages.y : avgY,\n    };\n\n    return averages;\n  }\n\n  public getAbsoluteCoordsSum(ignoredPointer?: number) {\n    const sum = { x: 0, y: 0 };\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sum.x += value.abosoluteCoords.x;\n        sum.y += value.abosoluteCoords.y;\n      }\n    });\n\n    return sum;\n  }\n\n  public getRelativeCoordsSum(ignoredPointer?: number) {\n    const sum = { x: 0, y: 0 };\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sum.x += value.relativeCoords.x;\n        sum.y += value.relativeCoords.y;\n      }\n    });\n\n    return sum;\n  }\n\n  public resetTracker(): void {\n    this.velocityTracker.reset();\n    this.trackedPointers.clear();\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public static shareCommonPointers(\n    stPointers: number[],\n    ndPointers: number[]\n  ): boolean {\n    return stPointers.some((pointerId) => ndPointers.includes(pointerId));\n  }\n\n  public get trackedPointersCount(): number {\n    return this.trackedPointers.size;\n  }\n\n  public get trackedPointersIDs() {\n    const keys: number[] = [];\n\n    this.trackedPointers.forEach((_value, key) => {\n      keys.push(key);\n    });\n\n    return keys;\n  }\n\n  public get trackedPointers() {\n    return this._trackedPointers;\n  }\n}\n"],"mappings":"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","ignoreList":[]}