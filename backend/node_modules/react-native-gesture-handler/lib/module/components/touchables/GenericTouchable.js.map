{"version":3,"names":["React","Component","Animated","Platform","State","BaseButton","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","constructor","args","_defineProperty","nativeEvent","pointerInside","onMoveIn","onMoveOut","state","CANCELLED","FAILED","moveToState","OS","ACTIVE","STATE","handlePressIn","END","shouldCallOnPress","longPressDetected","pressOutTimeout","handleGoToUndetermined","_this$props$onPress","_this$props","props","onPress","call","_this$props$onLongPre","_this$props2","onLongPress","delayPressIn","pressInTimeout","setTimeout","time","delayLongPress","longPressTimeout","onLongPressDetected","handleMoveOutside","delayPressOut","clearTimeout","componentDidMount","reset","newState","_this$props$onStateCh","_this$props6","_this$props$onPressIn","_this$props3","onPressIn","_this$props$onPressOu","_this$props4","onPressOut","_this$props$onPressOu2","_this$props5","onStateChange","componentWillUnmount","render","_ref","_this$props$touchSoun","hitSlop","top","left","bottom","right","undefined","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","createElement","_extends","style","containerStyle","onHandlerStateChange","disabled","onGestureEvent","userSelect","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","enabled","extraButtonProps","View","children","rippleColor","exclusive"],"sources":["GenericTouchable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport type { NativeViewGestureHandlerPayload } from '../../handlers/GestureHandlerEventPayload';\nimport type { TouchableNativeFeedbackExtraProps } from './TouchableNativeFeedbackProps';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = (typeof TOUCHABLE_STATE)[keyof typeof TOUCHABLE_STATE];\n\ninterface InternalProps {\n  extraButtonProps: TouchableNativeFeedbackExtraProps;\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // Timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // Reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // Checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // To prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // Long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        userSelect={this.props.userSelect}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}