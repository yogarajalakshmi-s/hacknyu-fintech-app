function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import * as React from 'react';
import GenericTouchable from './GenericTouchable';

/**
 * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler.
 */

/**
 * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler.
 */
const TouchableWithoutFeedback = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(GenericTouchable, _extends({
  ref: ref
}, props)));
TouchableWithoutFeedback.defaultProps = GenericTouchable.defaultProps;
export default TouchableWithoutFeedback;
//# sourceMappingURL=TouchableWithoutFeedback.js.map