{"version":3,"names":["React","Component","GenericTouchable","TOUCHABLE_STATE","StyleSheet","View","TouchableHighlight","constructor","props","_defineProperty","_this$props$onShowUnd","_this$props","hasPressHandler","setState","extraChildStyle","opacity","activeOpacity","extraUnderlayStyle","backgroundColor","underlayColor","onShowUnderlay","call","onPress","onPressIn","onPressOut","onLongPress","_this$props$onHideUnd","_this$props2","onHideUnderlay","_from","to","BEGAN","showUnderlay","UNDETERMINED","MOVED_OUTSIDE","hideUnderlay","state","renderChildren","children","createElement","child","Children","only","cloneElement","style","compose","render","rest","_extends","onStateChange","defaultProps","delayPressOut"],"sources":["TouchableHighlight.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\nimport {\n  StyleSheet,\n  View,\n  TouchableHighlightProps as RNTouchableHighlightProps,\n  ColorValue,\n  ViewProps,\n} from 'react-native';\n\ninterface State {\n  extraChildStyle: null | {\n    opacity?: number;\n  };\n  extraUnderlayStyle: null | {\n    backgroundColor?: ColorValue;\n  };\n}\n\n/**\n * @deprecated TouchableHighlight will be removed in the future version of Gesture Handler.\n */\nexport type TouchableHighlightProps = RNTouchableHighlightProps &\n  GenericTouchableProps;\n\n/**\n * @deprecated TouchableHighlight will be removed in the future version of Gesture Handler.\n *\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component<\n  TouchableHighlightProps,\n  State\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  constructor(props: TouchableHighlightProps) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay?.();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay?.();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(\n      this.props.children\n    ) as React.ReactElement<ViewProps>; // TODO: not sure if OK but fixes error\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(child.props.style, this.state.extraChildStyle),\n    });\n  }\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,gBAAgB,IAAIC,eAAe,QAAQ,oBAAoB;AAEtE,SACEC,UAAU,EACVC,IAAI,QAIC,cAAc;;AAWrB;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,kBAAkB,SAASL,SAAS,CAGvD;EAQAM,WAAWA,CAACC,KAA8B,EAAE;IAC1C,KAAK,CAACA,KAAK,CAAC;IAOd;IAAAC,eAAA,uBACe,MAAM;MAAA,IAAAC,qBAAA,EAAAC,WAAA;MACnB,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC,EAAE;QAC3B;MACF;MACA,IAAI,CAACC,QAAQ,CAAC;QACZC,eAAe,EAAE;UACfC,OAAO,EAAE,IAAI,CAACP,KAAK,CAACQ;QACtB,CAAC;QACDC,kBAAkB,EAAE;UAClBC,eAAe,EAAE,IAAI,CAACV,KAAK,CAACW;QAC9B;MACF,CAAC,CAAC;MACF,CAAAT,qBAAA,IAAAC,WAAA,OAAI,CAACH,KAAK,EAACY,cAAc,cAAAV,qBAAA,eAAzBA,qBAAA,CAAAW,IAAA,CAAAV,WAA4B,CAAC;IAC/B,CAAC;IAAAF,eAAA,0BAEiB,MAChB,IAAI,CAACD,KAAK,CAACc,OAAO,IAClB,IAAI,CAACd,KAAK,CAACe,SAAS,IACpB,IAAI,CAACf,KAAK,CAACgB,UAAU,IACrB,IAAI,CAAChB,KAAK,CAACiB,WAAW;IAAAhB,eAAA,uBAET,MAAM;MAAA,IAAAiB,qBAAA,EAAAC,YAAA;MACnB,IAAI,CAACd,QAAQ,CAAC;QACZC,eAAe,EAAE,IAAI;QACrBG,kBAAkB,EAAE;MACtB,CAAC,CAAC;MACF,CAAAS,qBAAA,IAAAC,YAAA,OAAI,CAACnB,KAAK,EAACoB,cAAc,cAAAF,qBAAA,eAAzBA,qBAAA,CAAAL,IAAA,CAAAM,YAA4B,CAAC;IAC/B,CAAC;IAAAlB,eAAA,wBAee,CAACoB,KAAa,EAAEC,EAAU,KAAK;MAC7C,IAAIA,EAAE,KAAK3B,eAAe,CAAC4B,KAAK,EAAE;QAChC,IAAI,CAACC,YAAY,CAAC,CAAC;MACrB,CAAC,MAAM,IACLF,EAAE,KAAK3B,eAAe,CAAC8B,YAAY,IACnCH,EAAE,KAAK3B,eAAe,CAAC+B,aAAa,EACpC;QACA,IAAI,CAACC,YAAY,CAAC,CAAC;MACrB;IACF,CAAC;IA1DC,IAAI,CAACC,KAAK,GAAG;MACXtB,eAAe,EAAE,IAAI;MACrBG,kBAAkB,EAAE;IACtB,CAAC;EACH;EAgCAoB,cAAcA,CAAA,EAAG;IACf,IAAI,CAAC,IAAI,CAAC7B,KAAK,CAAC8B,QAAQ,EAAE;MACxB,oBAAOtC,KAAA,CAAAuC,aAAA,CAAClC,IAAI,MAAE,CAAC;IACjB;IAEA,MAAMmC,KAAK,GAAGxC,KAAK,CAACyC,QAAQ,CAACC,IAAI,CAC/B,IAAI,CAAClC,KAAK,CAAC8B,QACb,CAAkC,CAAC,CAAC;IACpC,oBAAOtC,KAAK,CAAC2C,YAAY,CAACH,KAAK,EAAE;MAC/BI,KAAK,EAAExC,UAAU,CAACyC,OAAO,CAACL,KAAK,CAAChC,KAAK,CAACoC,KAAK,EAAE,IAAI,CAACR,KAAK,CAACtB,eAAe;IACzE,CAAC,CAAC;EACJ;EAaAgC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEF,KAAK,GAAG,CAAC,CAAC;MAAE,GAAGG;IAAK,CAAC,GAAG,IAAI,CAACvC,KAAK;IAC1C,MAAM;MAAES;IAAmB,CAAC,GAAG,IAAI,CAACmB,KAAK;IACzC,oBACEpC,KAAA,CAAAuC,aAAA,CAACrC,gBAAgB,EAAA8C,QAAA,KACXD,IAAI;MACRH,KAAK,EAAE,CAACA,KAAK,EAAE3B,kBAAkB,CAAE;MACnCgC,aAAa,EAAE,IAAI,CAACA;IAAc,IACjC,IAAI,CAACZ,cAAc,CAAC,CACL,CAAC;EAEvB;AACF;AAAC5B,eAAA,CArFoBH,kBAAkB,kBAIf;EACpB,GAAGJ,gBAAgB,CAACgD,YAAY;EAChClC,aAAa,EAAE,IAAI;EACnBmC,aAAa,EAAE,GAAG;EAClBhC,aAAa,EAAE;AACjB,CAAC","ignoreList":[]}