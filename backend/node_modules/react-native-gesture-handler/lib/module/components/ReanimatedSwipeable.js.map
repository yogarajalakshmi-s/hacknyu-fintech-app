{"version":3,"names":["React","forwardRef","useCallback","useImperativeHandle","useMemo","GestureObjects","Gesture","GestureDetector","Animated","ReduceMotion","interpolate","measure","runOnJS","runOnUI","useAnimatedRef","useAnimatedStyle","useSharedValue","withSpring","I18nManager","StyleSheet","View","DRAG_TOSS","SwipeDirection","Swipeable","props","ref","defaultProps","friction","overshootFriction","dragOffset","enableTrackpadTwoFingerGesture","leftThreshold","rightThreshold","enabled","containerStyle","childrenContainerStyle","animationOptions","overshootLeft","overshootRight","testID","children","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","onSwipeableWillOpen","onSwipeableWillClose","onSwipeableOpen","onSwipeableClose","renderLeftActions","renderRightActions","simultaneousWithExternalGesture","remainingProps","rowState","userDrag","appliedTranslation","rowWidth","leftWidth","rightWidth","showLeftProgress","showRightProgress","updateAnimatedEvent","shouldOvershootLeft","value","shouldOvershootRight","startOffset","offsetDrag","dispatchImmediateEvents","fromValue","toValue","RIGHT","LEFT","dispatchEndEvents","animateRow","velocityX","translationSpringConfig","mass","damping","stiffness","velocity","overshootClamping","reduceMotion","System","isClosing","moveToRight","usedWidth","progressSpringConfig","restDisplacementThreshold","restSpeedThreshold","frozenRowState","isFinished","progressTarget","Math","sign","max","leftLayoutRef","leftWrapperLayoutRef","rightLayoutRef","updateElementWidths","_leftLayout$pageX","_leftWrapperLayout$pa","_rightLayout$pageX","_leftWrapperLayout$pa2","leftLayout","leftWrapperLayout","rightLayout","pageX","swipeableMethods","close","_WORKLET","openLeft","openRight","reset","onRowLayout","nativeEvent","layout","width","leftActionAnimation","opacity","leftElement","createElement","style","styles","leftActions","rightActionAnimation","rightElement","rightActions","handleRelease","event","translationX","leftThresholdProp","rightThresholdProp","dragStarted","tapGesture","tap","Tap","shouldCancelWhenOutside","onStart","Array","isArray","panGesture","pan","Pan","activeOffsetX","onUpdate","direction","onEnd","onFinalize","animatedStyle","transform","translateX","pointerEvents","swipeableComponent","gesture","touchAction","_extends","onLayout","container","create","overflow","absoluteFillObject","flexDirection","isRTL"],"sources":["ReanimatedSwipeable.tsx"],"sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { GestureRef } from '../handlers/gestures/gesture';\nimport { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../handlers/gestures/GestureDetector';\nimport {\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../handlers/gestureHandlerCommon';\nimport type { PanGestureHandlerProps } from '../handlers/PanGestureHandler';\nimport type { PanGestureHandlerEventPayload } from '../handlers/GestureHandlerEventPayload';\nimport Animated, {\n  ReduceMotion,\n  SharedValue,\n  interpolate,\n  measure,\n  runOnJS,\n  runOnUI,\n  useAnimatedRef,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\nimport {\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nenum SwipeDirection {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Distance that the panel must be dragged from the left edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromLeftEdge?: number;\n\n  /**\n   * Distance that the panel must be dragged from the right edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromRightEdge?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to open.\n   */\n  onSwipeableOpenStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to close.\n   */\n  onSwipeableCloseStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * A gesture object or an array of gesture objects containing the configuration and callbacks to be\n   * used with the swipeable's gesture handler.\n   */\n  simultaneousWithExternalGesture?:\n    | Exclude<GestureRef, number>\n    | Exclude<GestureRef, number>[];\n}\n\nexport interface SwipeableMethods {\n  close: () => void;\n  openLeft: () => void;\n  openRight: () => void;\n  reset: () => void;\n}\n\nconst Swipeable = forwardRef<SwipeableMethods, SwipeableProps>(\n  function Swipeable(\n    props: SwipeableProps,\n    ref: ForwardedRef<SwipeableMethods>\n  ) {\n    const defaultProps = {\n      friction: 1,\n      overshootFriction: 1,\n      dragOffset: 10,\n      enableTrackpadTwoFingerGesture: false,\n    };\n\n    const {\n      leftThreshold,\n      rightThreshold,\n      enabled,\n      containerStyle,\n      childrenContainerStyle,\n      animationOptions,\n      overshootLeft,\n      overshootRight,\n      testID,\n      children,\n      enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,\n      dragOffsetFromLeftEdge = defaultProps.dragOffset,\n      dragOffsetFromRightEdge = defaultProps.dragOffset,\n      friction = defaultProps.friction,\n      overshootFriction = defaultProps.overshootFriction,\n      onSwipeableOpenStartDrag,\n      onSwipeableCloseStartDrag,\n      onSwipeableWillOpen,\n      onSwipeableWillClose,\n      onSwipeableOpen,\n      onSwipeableClose,\n      renderLeftActions,\n      renderRightActions,\n      simultaneousWithExternalGesture,\n      ...remainingProps\n    } = props;\n\n    const rowState = useSharedValue<number>(0);\n\n    const userDrag = useSharedValue<number>(0);\n\n    const appliedTranslation = useSharedValue<number>(0);\n\n    const rowWidth = useSharedValue<number>(0);\n    const leftWidth = useSharedValue<number>(0);\n    const rightWidth = useSharedValue<number>(0);\n\n    const showLeftProgress = useSharedValue<number>(0);\n    const showRightProgress = useSharedValue<number>(0);\n\n    const updateAnimatedEvent = useCallback(() => {\n      'worklet';\n\n      const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;\n      const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;\n\n      const startOffset =\n        rowState.value === 1\n          ? leftWidth.value\n          : rowState.value === -1\n            ? -rightWidth.value\n            : 0;\n\n      const offsetDrag = userDrag.value / friction + startOffset;\n\n      appliedTranslation.value = interpolate(\n        offsetDrag,\n        [\n          -rightWidth.value - 1,\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + 1,\n        ],\n        [\n          -rightWidth.value -\n            (shouldOvershootRight ? 1 / overshootFriction : 0),\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0),\n        ]\n      );\n\n      showLeftProgress.value =\n        leftWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-1, 0, leftWidth.value],\n              [0, 0, 1]\n            )\n          : 0;\n\n      showRightProgress.value =\n        rightWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-rightWidth.value, 0, 1],\n              [1, 0, 0]\n            )\n          : 0;\n    }, [\n      appliedTranslation,\n      friction,\n      leftWidth,\n      overshootFriction,\n      rightWidth,\n      rowState,\n      showLeftProgress,\n      showRightProgress,\n      userDrag,\n      overshootLeft,\n      overshootRight,\n    ]);\n\n    const dispatchImmediateEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableWillClose) {\n          runOnJS(onSwipeableWillClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableWillClose, onSwipeableWillOpen]\n    );\n\n    const dispatchEndEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableClose) {\n          runOnJS(onSwipeableClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableClose, onSwipeableOpen]\n    );\n\n    const animateRow: (toValue: number, velocityX?: number) => void =\n      useCallback(\n        (toValue: number, velocityX?: number) => {\n          'worklet';\n\n          const translationSpringConfig = {\n            mass: 2,\n            damping: 1000,\n            stiffness: 700,\n            velocity: velocityX,\n            overshootClamping: true,\n            reduceMotion: ReduceMotion.System,\n            ...animationOptions,\n          };\n\n          const isClosing = toValue === 0;\n          const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;\n\n          const usedWidth = isClosing\n            ? moveToRight\n              ? rightWidth.value\n              : leftWidth.value\n            : moveToRight\n              ? leftWidth.value\n              : rightWidth.value;\n\n          const progressSpringConfig = {\n            ...translationSpringConfig,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 0.01,\n            velocity:\n              velocityX &&\n              interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1]),\n          };\n\n          const frozenRowState = rowState.value;\n\n          appliedTranslation.value = withSpring(\n            toValue,\n            translationSpringConfig,\n            (isFinished) => {\n              if (isFinished) {\n                dispatchEndEvents(frozenRowState, toValue);\n              }\n            }\n          );\n\n          const progressTarget = toValue === 0 ? 0 : 1 * Math.sign(toValue);\n\n          showLeftProgress.value = withSpring(\n            Math.max(progressTarget, 0),\n            progressSpringConfig\n          );\n\n          showRightProgress.value = withSpring(\n            Math.max(-progressTarget, 0),\n            progressSpringConfig\n          );\n\n          dispatchImmediateEvents(frozenRowState, toValue);\n\n          rowState.value = Math.sign(toValue);\n        },\n        [\n          rowState,\n          animationOptions,\n          appliedTranslation,\n          showLeftProgress,\n          leftWidth,\n          showRightProgress,\n          rightWidth,\n          dispatchImmediateEvents,\n          dispatchEndEvents,\n        ]\n      );\n\n    const leftLayoutRef = useAnimatedRef();\n    const leftWrapperLayoutRef = useAnimatedRef();\n    const rightLayoutRef = useAnimatedRef();\n\n    const updateElementWidths = useCallback(() => {\n      'worklet';\n      const leftLayout = measure(leftLayoutRef);\n      const leftWrapperLayout = measure(leftWrapperLayoutRef);\n      const rightLayout = measure(rightLayoutRef);\n      leftWidth.value =\n        (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);\n\n      rightWidth.value =\n        rowWidth.value -\n        (rightLayout?.pageX ?? rowWidth.value) +\n        (leftWrapperLayout?.pageX ?? 0);\n    }, [\n      leftLayoutRef,\n      leftWrapperLayoutRef,\n      rightLayoutRef,\n      leftWidth,\n      rightWidth,\n      rowWidth,\n    ]);\n\n    const swipeableMethods = useMemo<SwipeableMethods>(\n      () => ({\n        close() {\n          'worklet';\n          if (_WORKLET) {\n            animateRow(0);\n            return;\n          }\n          runOnUI(() => {\n            animateRow(0);\n          })();\n        },\n        openLeft() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n          })();\n        },\n        openRight() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n          })();\n        },\n        reset() {\n          'worklet';\n          userDrag.value = 0;\n          showLeftProgress.value = 0;\n          appliedTranslation.value = 0;\n          rowState.value = 0;\n        },\n      }),\n      [\n        animateRow,\n        updateElementWidths,\n        leftWidth,\n        rightWidth,\n        userDrag,\n        showLeftProgress,\n        appliedTranslation,\n        rowState,\n      ]\n    );\n\n    const onRowLayout = useCallback(\n      ({ nativeEvent }: LayoutChangeEvent) => {\n        rowWidth.value = nativeEvent.layout.width;\n      },\n      [rowWidth]\n    );\n\n    // As stated in `Dimensions.get` docstring, this function should be called on every render\n    // since dimensions may change (e.g. orientation change)\n\n    const leftActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showLeftProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const leftElement = useCallback(\n      () => (\n        <Animated.View\n          ref={leftWrapperLayoutRef}\n          style={[styles.leftActions, leftActionAnimation]}>\n          {renderLeftActions?.(\n            showLeftProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={leftLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        leftActionAnimation,\n        leftLayoutRef,\n        leftWrapperLayoutRef,\n        renderLeftActions,\n        showLeftProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const rightActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showRightProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const rightElement = useCallback(\n      () => (\n        <Animated.View style={[styles.rightActions, rightActionAnimation]}>\n          {renderRightActions?.(\n            showRightProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={rightLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        renderRightActions,\n        rightActionAnimation,\n        rightLayoutRef,\n        showRightProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const handleRelease = useCallback(\n      (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n        'worklet';\n        const { velocityX } = event;\n        userDrag.value = event.translationX;\n\n        const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;\n        const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;\n\n        const translationX =\n          (userDrag.value + DRAG_TOSS * velocityX) / friction;\n\n        let toValue = 0;\n\n        if (rowState.value === 0) {\n          if (translationX > leftThresholdProp) {\n            toValue = leftWidth.value;\n          } else if (translationX < -rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        } else if (rowState.value === 1) {\n          // Swiped to left\n          if (translationX > -leftThresholdProp) {\n            toValue = leftWidth.value;\n          }\n        } else {\n          // Swiped to right\n          if (translationX < rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        }\n\n        animateRow(toValue, velocityX / friction);\n      },\n      [\n        animateRow,\n        friction,\n        leftThreshold,\n        leftWidth,\n        rightThreshold,\n        rightWidth,\n        rowState,\n        userDrag,\n      ]\n    );\n\n    const close = useCallback(() => {\n      'worklet';\n      animateRow(0);\n    }, [animateRow]);\n\n    const dragStarted = useSharedValue<boolean>(false);\n\n    const tapGesture = useMemo(() => {\n      const tap = Gesture.Tap()\n        .shouldCancelWhenOutside(true)\n        .onStart(() => {\n          if (rowState.value !== 0) {\n            close();\n          }\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return tap;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return tap;\n    }, [close, rowState, simultaneousWithExternalGesture]);\n\n    const panGesture = useMemo(() => {\n      const pan = Gesture.Pan()\n        .enabled(enabled !== false)\n        .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)\n        .activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge])\n        .onStart(updateElementWidths)\n        .onUpdate(\n          (event: GestureUpdateEvent<PanGestureHandlerEventPayload>) => {\n            userDrag.value = event.translationX;\n\n            const direction =\n              rowState.value === -1\n                ? SwipeDirection.RIGHT\n                : rowState.value === 1\n                  ? SwipeDirection.LEFT\n                  : event.translationX > 0\n                    ? SwipeDirection.RIGHT\n                    : SwipeDirection.LEFT;\n\n            if (!dragStarted.value) {\n              dragStarted.value = true;\n              if (rowState.value === 0 && onSwipeableOpenStartDrag) {\n                runOnJS(onSwipeableOpenStartDrag)(direction);\n              } else if (onSwipeableCloseStartDrag) {\n                runOnJS(onSwipeableCloseStartDrag)(direction);\n              }\n            }\n\n            updateAnimatedEvent();\n          }\n        )\n        .onEnd(\n          (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n            handleRelease(event);\n          }\n        )\n        .onFinalize(() => {\n          dragStarted.value = false;\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return pan;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return pan;\n    }, [\n      dragOffsetFromLeftEdge,\n      dragOffsetFromRightEdge,\n      dragStarted,\n      enableTrackpadTwoFingerGesture,\n      enabled,\n      handleRelease,\n      onSwipeableCloseStartDrag,\n      onSwipeableOpenStartDrag,\n      rowState,\n      updateAnimatedEvent,\n      updateElementWidths,\n      userDrag,\n      simultaneousWithExternalGesture,\n    ]);\n\n    useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);\n\n    const animatedStyle = useAnimatedStyle(\n      () => ({\n        transform: [{ translateX: appliedTranslation.value }],\n        pointerEvents: rowState.value === 0 ? 'auto' : 'box-only',\n      }),\n      [appliedTranslation, rowState]\n    );\n\n    const swipeableComponent = (\n      <GestureDetector gesture={panGesture} touchAction=\"pan-y\">\n        <Animated.View\n          {...remainingProps}\n          onLayout={onRowLayout}\n          style={[styles.container, containerStyle]}>\n          {leftElement()}\n          {rightElement()}\n          <GestureDetector gesture={tapGesture} touchAction=\"pan-y\">\n            <Animated.View style={[animatedStyle, childrenContainerStyle]}>\n              {children}\n            </Animated.View>\n          </GestureDetector>\n        </Animated.View>\n      </GestureDetector>\n    );\n\n    return testID ? (\n      <View testID={testID}>{swipeableComponent}</View>\n    ) : (\n      swipeableComponent\n    );\n  }\n);\n\nexport default Swipeable;\nexport type SwipeableRef = ForwardedRef<SwipeableMethods>;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n    overflow: 'hidden',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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","ignoreList":[]}