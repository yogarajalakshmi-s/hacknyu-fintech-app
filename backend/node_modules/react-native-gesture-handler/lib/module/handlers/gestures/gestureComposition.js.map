{"version":3,"names":["BaseGesture","Gesture","extendRelation","currentRelation","extendWith","undefined","ComposedGesture","constructor","gestures","_defineProperty","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","newConfig","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","SimultaneousGesture","simultaneousArrays","map","filter","x","i","length","ExclusiveGesture","gestureArrays","concat"],"sources":["gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      // No need to extend `blocksHandlers` here, because it's not changed in composition.\n      // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // This piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // Transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // Every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":"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","ignoreList":[]}